{"version":3,"sources":["2-features/1-auth/1-login/Login.module.css","2-features/1-auth/2-signUp/sign-up-common/SuperInputText/SuperInputText.module.css","2-features/1-auth/2-signUp/SignUp.module.css","2-features/1-auth/2-signUp/sign-up-common/SuperButton/SuperButton.module.css","2-features/1-auth/2-signUp/sign-up-common/Error404/Error404.module.css","1-main/1-ui/App.module.css","2-features/1-auth/2-signUp/sign-up-common/SuperCheckbox/SuperCheckbox.module.css","2-features/2-profile/Profile.module.css","1-main/1-ui/header/Header.module.css","2-features/1-auth/2-signUp/sign-up-common/CustomNavLink/CustomNavLink.module.css","2-features/1-auth/2-signUp/sign-up-common/SuperInputText/SuperInputText.tsx","2-features/1-auth/2-signUp/sign-up-common/SuperButton/SuperButton.tsx","2-features/1-auth/2-signUp/sign-up-common/SuperCheckbox/SuperCheckbox.tsx","2-features/0-test/Test.tsx","2-features/1-auth/2-signUp/sign-up-common/Error404/Error404.tsx","1-main/3-dal/api.ts","1-main/2-bll/authReducer.ts","2-features/1-auth/1-login/Login.tsx","2-features/1-auth/2-signUp/sign-up-api.ts","1-main/2-bll/signUpReducer.ts","2-features/1-auth/2-signUp/SignUp.tsx","2-features/2-profile/1-ProfileCard/ProfileCard.tsx","2-features/2-profile/THead.tsx","2-features/2-profile/TBody.tsx","2-features/2-profile/Table.tsx","2-features/2-profile/Search.tsx","2-features/2-profile/Header.tsx","2-features/2-profile/Range.tsx","2-features/2-profile/Pagination.tsx","2-features/2-profile/Profile.tsx","1-main/3-dal/restoreAPI.ts","1-main/2-bll/restoreReducer.ts","2-features/restore/1-resetPassword/ResetPassword.tsx","2-features/restore/2-newPassword/NewPassword.tsx","2-features/restore/1-resetPassword/CheckEmail.tsx","1-main/1-ui/routes/Routes.tsx","2-features/1-auth/2-signUp/sign-up-common/CustomNavLink/CustomNavLink.tsx","1-main/1-ui/header/Header.tsx","1-main/1-ui/Main.tsx","1-main/2-bll/profileReducer.ts","1-main/2-bll/store.ts","1-main/1-ui/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","SuperInputText","React","memo","placeholder","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","console","log","finalSpanClassName","s","input","errorInput","superInput","group","required","e","currentTarget","value","key","SuperButton","color","finalClassName","default","SuperCheckbox","onChangeChecked","children","finalInputClassName","checkbox","checked","Test","useState","text","setText","showAlert","alert","setChecked","disabled","onClick","Error404","classes","container","main","fof","instance","axios","create","baseURL","withCredentials","authAPI","email","password","rememberMe","post","initialState","isLoggedIn","isLoading","isLoggedInChange","setError","setIsLoading","Login","dispatch","useDispatch","useSelector","state","auth","setEmail","setPassword","setRememberMe","to","style","loginBlock","loginList","loginTitle","loginInput","rememberBlock","PATH","RESET_PASSWORD","forgotLink","activeClassName","forgotLincActive","loginButton","loginData","then","catch","response","data","loginText","SIGN_UP","signUpLink","signUpLinkActive","signUpApi","setSignUpErrorAC","SignUp","signUp","signUpError","confirmPassword","setConfirmPassword","onSignUp","res","rej","signUpTC","signUpContainer","onSubmit","LOGIN","signUpForm","buttonsContainer","ProfileCard","props","profile","image","src","profileData","photo","alt","name","header","description","THead","listItem","headers","map","h","TBody","items","item","index","btn","Table","table","Search","Header","title","Range","setValue","range","min","max","Pagination","pages","i","countPage","push","el","pagination","stateForTestProfile","Profile","page","sidebar","content","footer","restoreAPI","requestData","restoreEmailSendSuccess","newPasswordSuccess","setReceiverEmailAC","changePasswordSuccessAC","success","ResetPassword","restore","emailAddress","setEmailAddress","CHECK_EMAIL","a","requestObj","from","message","href","NewPassword","token","useParams","changePasswordSuccess","newPassword","setNewPassword","resetPasswordToken","setNewPasswordTC","CheckEmail","emailOfReceiver","PROFILE","NEW_PASSWORD","TEST","Routes","path","exact","render","CustomNavLink","navLink","Main","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","window","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1d3c6be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBlock\":\"Login_loginBlock__--uzg\",\"loginList\":\"Login_loginList__1unfP\",\"loginTitle\":\"Login_loginTitle__2XPJ2\",\"loginInput\":\"Login_loginInput__1STqW\",\"rememberBlock\":\"Login_rememberBlock__1fmrK\",\"loginCheckbox\":\"Login_loginCheckbox__cKH-F\",\"forgotLink\":\"Login_forgotLink__ho-ZO\",\"forgotLinkActive\":\"Login_forgotLinkActive__1BuvV\",\"loginButton\":\"Login_loginButton__v2Txz\",\"loginText\":\"Login_loginText__1mcpT\",\"signUpLink\":\"Login_signUpLink__1F2wY\",\"signUpLinkActive\":\"Login_signUpLinkActive__3Ber0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"group\":\"SuperInputText_group__2S800\",\"errorInput\":\"SuperInputText_errorInput__34Qzl\",\"error\":\"SuperInputText_error__jx1Vx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signUpContainer\":\"SignUp_signUpContainer__3gp3q\",\"signUpForm\":\"SignUp_signUpForm__17AjK\",\"error\":\"SignUp_error__2gvSH\",\"buttonsContainer\":\"SignUp_buttonsContainer__Thwab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__h-veD\",\"white\":\"SuperButton_white__3peMs\",\"blue\":\"SuperButton_blue__5JLOT\",\"red\":\"SuperButton_red__gbQyz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Error404_container__3qUyK\",\"main\":\"Error404_main__2H8Cg\",\"fof\":\"Error404_fof__27oWq\",\"type\":\"Error404_type__36aHc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__iX4cl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1ar1v\",\"spanClassName\":\"SuperCheckbox_spanClassName__25qhW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Profile_page__1ig7T\",\"sidebar\":\"Profile_sidebar__3FVKA\",\"profile\":\"Profile_profile__1ckON\",\"image\":\"Profile_image__3RvGR\",\"name\":\"Profile_name__vWPKS\",\"description\":\"Profile_description__2M_zJ\",\"range\":\"Profile_range__3tOIG\",\"content\":\"Profile_content__2FNVr\",\"header\":\"Profile_header__ykEE7\",\"main\":\"Profile_main__1Dgqn\",\"listItem\":\"Profile_listItem__2adLH\",\"table\":\"Profile_table__3AEAh\",\"btn\":\"Profile_btn__2S_sp\",\"footer\":\"Profile_footer__3sIyv\",\"pagination\":\"Profile_pagination___DVmq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2AAZ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"CustomNavLink_navLink__1zMvl\"};","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    type?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = React.memo((\r\n    {\r\n        placeholder, type,\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    console.log(placeholder)\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}`\r\n\r\n    return (\r\n        <div className={s.group}>\r\n            <input\r\n                type={type}\r\n                required\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                // className={finalInputClassName}\r\n                // placeholder={placeholder}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            <label>{placeholder}</label>\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n    color?: 'white' | 'blue' | 'red'\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = React.memo((\r\n    {\r\n        color, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${color ? s[color] : s.default} ${s.default}`\r\n    console.log('SB')\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n})\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport SuperInputText from \"../1-auth/2-signUp/sign-up-common/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../1-auth/2-signUp/sign-up-common/SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../1-auth/2-signUp/sign-up-common/SuperCheckbox/SuperCheckbox\";\r\n\r\n\r\nconst Test = () => {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text)\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n    return (\r\n        <div>\r\n            <h1>test</h1>\r\n            <SuperInputText\r\n                value={text}\r\n                onChangeText={setText}\r\n                onEnter={showAlert}\r\n                error={error}\r\n                // spanClassName={s.testSpanError}\r\n            />\r\n            <SuperButton>\r\n                default\r\n            </SuperButton>\r\n\r\n            <SuperButton disabled>\r\n                disabled\r\n            </SuperButton>\r\n\r\n            <SuperButton\r\n                // red // пропсу с булевым значением не обязательно указывать true\r\n                onClick={showAlert}\r\n            >\r\n                delete {/*// название кнопки попадёт в children*/}\r\n            </SuperButton>\r\n\r\n            <SuperCheckbox\r\n                checked={checked}\r\n                onChangeChecked={setChecked}\r\n            >\r\n                some text\r\n            </SuperCheckbox>\r\n\r\n\r\n            <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Test;","import React from 'react'\r\nimport classes from './Error404.module.css'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={classes.container}>\r\n            <div className={classes.main}>\r\n                <div className={classes.fof}>\r\n                    <h1>Error 404</h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true,\r\n})\r\n\r\nexport const authAPI = {\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<LoginResponseType>('auth/login', {email, password, rememberMe})\r\n    }\r\n}\r\n\r\n// types\r\nexport type LoginResponseType = {\r\n    avatar: string,\r\n    created: string,\r\n    deviceTokens: DeviceTokenType [],\r\n    email: string,\r\n    isAdmin: boolean,\r\n    name: string,\r\n    publicCardPacksCount: number,\r\n    rememberMe: boolean,\r\n    token: string,\r\n    tokenDeathTime: number,\r\n    updated: string,\r\n    verified: boolean,\r\n    __v: number,\r\n    _id: string,\r\n}\r\ntype DeviceTokenType = {\r\n    _id: string,\r\n    device: string,\r\n}","import {authAPI} from '../3-dal/api';\r\nimport {Dispatch} from 'redux';\r\n\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    error: '',\r\n    isLoading: false,\r\n}\r\n\r\nexport const authReducer = (state = initialState, action: ActionsType): typeof initialState => {\r\n    switch (action.type) {\r\n        case \"SET-LOGIN\":{\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n        case \"IS-LOGGED-IN-CHANGE\": {\r\n            return {\r\n                ...state, isLoggedIn: action.isLoggedIn\r\n            }\r\n        }\r\n        case \"SET-ERROR\": {\r\n            return {\r\n                ...state, error: action.error\r\n            }\r\n        }\r\n        case \"SET-IS-LOADING\":{\r\n            return {\r\n                ...state, isLoading: action.isLoading\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//AC\r\nexport const setLogin = () => ({type: 'SET-LOGIN'}) as const\r\nexport const isLoggedInChange = (isLoggedIn: boolean) => ({type: 'IS-LOGGED-IN-CHANGE', isLoggedIn}) as const\r\nexport const setError = (error: string) => ({type: 'SET-ERROR', error}) as const\r\nexport const setIsLoading = (isLoading: boolean) => ({type: 'SET-IS-LOADING', isLoading}) as const\r\n\r\n//Thunks\r\nexport const loginSuccess = (loginData: LoginDataType) => (dispatch: Dispatch<ThunkDispatch, null>) => {\r\n    dispatch(setIsLoading(true))\r\n    authAPI.login(loginData.email, loginData.password, loginData.rememberMe)\r\n        .then(() => {\r\n            dispatch(setLogin())\r\n            dispatch(isLoggedInChange(true))\r\n            dispatch(setIsLoading(false))\r\n            dispatch(setError(''))\r\n        })\r\n        .catch((error) => {\r\n            dispatch(isLoggedInChange(false))\r\n            dispatch(setError(error.response.data.error))\r\n            dispatch(setIsLoading(false))\r\n        })\r\n}\r\n\r\n// types\r\ntype ActionsType = ReturnType<typeof setLogin>\r\n| ReturnType<typeof isLoggedInChange>\r\n| ReturnType<typeof setError>\r\n| ReturnType<typeof setIsLoading>\r\ntype LoginDataType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean,\r\n}\r\ntype ThunkDispatch = ActionsType\r\n\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport {PATH} from '../../../1-main/1-ui/routes/Routes';\r\nimport style from './Login.module.css'\r\nimport {loginSuccess} from '../../../1-main/2-bll/authReducer';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../1-main/2-bll/store';\r\nimport SuperInputText from '../2-signUp/sign-up-common/SuperInputText/SuperInputText';\r\nimport SuperCheckbox from '../2-signUp/sign-up-common/SuperCheckbox/SuperCheckbox';\r\nimport SuperButton from '../2-signUp/sign-up-common/SuperButton/SuperButton';\r\n\r\n\r\nfunction Login() {\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n    const error = useSelector<AppRootStateType, string>(state => state.auth.error)\r\n    const isLoading = useSelector<AppRootStateType, boolean>(state => state.auth.isLoading)\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [rememberMe, setRememberMe] = useState(false)\r\n\r\n    const emailHandler = (e: ChangeEvent<HTMLInputElement>) => setEmail(e.currentTarget.value)\r\n    const passwordHandler = (e: ChangeEvent<HTMLInputElement>) => setPassword(e.currentTarget.value)\r\n    const rememberMeHandler = () => setRememberMe(!rememberMe)\r\n    const loginHandler = () => {\r\n        dispatch(loginSuccess({email, password, rememberMe}))\r\n    }\r\n    if(isLoggedIn){\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n    return (\r\n        <div className={style.loginBlock}>\r\n            <div className={style.loginList}>\r\n                <h1 className={style.loginTitle}>Login</h1>\r\n                {isLoading ? <div style={{color: 'green'}}>Loading...</div> : ''}\r\n                <SuperInputText className={style.loginInput} placeholder={'Email'} value={email} onChange={emailHandler}/>\r\n                <SuperInputText className={style.loginInput} placeholder={'Password'} value={password} onChange={passwordHandler}/>\r\n                <div className={style.rememberBlock}>\r\n                    <SuperCheckbox checked={rememberMe} onClick={rememberMeHandler}>Remember me</SuperCheckbox>\r\n                    <NavLink to={PATH.RESET_PASSWORD} className={style.forgotLink} activeClassName={style.forgotLincActive}>Forgot password</NavLink>\r\n                </div>\r\n                <SuperButton className={style.loginButton} onClick={loginHandler}>Login</SuperButton>\r\n                <div className={style.loginText}>Don't have an account?</div>\r\n                <NavLink to={PATH.SIGN_UP} className={style.signUpLink} activeClassName={style.signUpLinkActive}>Sign Up</NavLink>\r\n                {error ? <div style={{color: 'red'}}>{error}</div> : ''}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:7542/2.0/',\r\n})\r\n\r\n// api\r\nexport const signUpApi = {\r\n    createNewAccount(email: string, password: string) {\r\n        return instance.post('auth/register', {email, password});\r\n    }\r\n}\r\n\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {signUpApi} from \"../../2-features/1-auth/2-signUp/sign-up-api\";\r\n\r\ntype initialStateType = {\r\n    isLoggedIn: boolean\r\n    error: null | string\r\n}\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    error: '',\r\n}\r\n\r\nexport const signUpReducer = (state: initialStateType = initialState, action: ActionsType):initialStateType => {\r\n    switch (action.type) {\r\n        case \"SET-IS_LOGGED_IN\":\r\n            return {...state, isLoggedIn: action.value}\r\n        case \"SET-ERROR\":\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setIsLoggedInAC = (value: boolean) => {\r\n    return {type: 'SET-IS_LOGGED_IN', value} as const\r\n}\r\nexport const setSignUpErrorAC = (error: string) => {\r\n    return {type: 'SET-ERROR', error} as const\r\n}\r\n\r\n\r\nexport const signUpTC = (email: string, password: string) => (dispatch: Dispatch<ActionsType, ActionsType>) => {\r\n    signUpApi.createNewAccount(email, password)\r\n        .then(res => {\r\n            dispatch(setIsLoggedInAC(true))\r\n            // console.log(res.data)\r\n        })\r\n        .catch(rej=>{\r\n            dispatch(setSignUpErrorAC(rej.response.data.error))\r\n            // console.log(req.response.data.error)\r\n            // alert(req.Error)\r\n        })\r\n}\r\n\r\nexport type SetIsLoggedInActionType = ReturnType<typeof setIsLoggedInAC>\r\nexport type SetSignUpErrorACActionType = ReturnType<typeof setSignUpErrorAC>\r\n\r\ntype ActionsType = SetIsLoggedInActionType | SetSignUpErrorACActionType","import React, {useState} from 'react';\r\nimport SuperButton from \"./sign-up-common/SuperButton/SuperButton\";\r\nimport SuperInputText from \"./sign-up-common/SuperInputText/SuperInputText\";\r\nimport style from './SignUp.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setSignUpErrorAC, signUpTC} from \"../../../1-main/2-bll/signUpReducer\";\r\nimport {AppRootStateType} from \"../../../1-main/2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../../1-main/1-ui/routes/Routes\";\r\n\r\nfunction SignUp() {\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppRootStateType>((state) => state.signUp.isLoggedIn)\r\n    const signUpError = useSelector<AppRootStateType, string | null>(state => state.signUp.error)\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [confirmPassword, setConfirmPassword] = useState<string>('')\r\n\r\n    const onSignUp = () => {\r\n        password === confirmPassword\r\n            ? dispatch(signUpTC(email, password))\r\n            : dispatch(setSignUpErrorAC('Password mismatch'))\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        onSignUp()\r\n    }\r\n    const onCancel = () => {\r\n        setEmail('')\r\n        setPassword('')\r\n        setConfirmPassword('')\r\n        dispatch(setSignUpErrorAC(''))\r\n    }\r\n\r\n    return (\r\n        <div className={style.signUpContainer} onSubmit={handleSubmit}>\r\n            {isLoggedIn && <Redirect to={PATH.LOGIN}/>}\r\n            <form className={style.signUpForm}>\r\n                <div>\r\n                    <h3>Create a new account</h3>\r\n                    {signUpError && <span className={style.error}>{signUpError}</span>}\r\n                </div>\r\n                <div>\r\n                    <SuperInputText\r\n                        value={email}\r\n                        onChangeText={setEmail}\r\n                        onEnter={onSignUp}\r\n                        type={'text'}\r\n                        placeholder={'Email'}\r\n                    />\r\n                    <SuperInputText\r\n                        value={password}\r\n                        onChangeText={setPassword}\r\n                        onEnter={onSignUp}\r\n                        type={'Password'}\r\n                        placeholder={'Password'}\r\n                    />\r\n                    <SuperInputText\r\n                        value={confirmPassword}\r\n                        onChangeText={setConfirmPassword}\r\n                        onEnter={onSignUp}\r\n                        type={'Password'}\r\n                        placeholder={'Confirm Password'}\r\n                    />\r\n                </div>\r\n                <div className={style.buttonsContainer}>\r\n                    <SuperButton type={'button'} onClick={onCancel} color={'white'}>Cancel</SuperButton>\r\n                    <SuperButton type={'submit'} color={'blue'}>Register</SuperButton>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignUp;\r\n","import classes from \"../Profile.module.css\";\r\nimport React from \"react\";\r\nimport {ProfileDataType} from \"../Profile\";\r\n\r\ntype ProfileCardPropsType = {\r\n    profileData: ProfileDataType\r\n}\r\n\r\nexport function ProfileCard(props: ProfileCardPropsType) {\r\n    return (\r\n        <div className={classes.profile}>\r\n            <div className={classes.image}><img src={props.profileData.photo} alt=\"User\"/></div>\r\n            <div className={classes.name}>{props.profileData.header}</div>\r\n            <div className={classes.description}>{props.profileData.description}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import classes from \"./Profile.module.css\";\r\nimport React from \"react\";\r\nimport {EntityListType} from \"./Profile\";\r\n\r\ntype ListHeaderPropsType = {\r\n    headers: EntityListType\r\n}\r\n\r\nexport function THead(props: ListHeaderPropsType) {\r\n    return (\r\n        <tr className={classes.listItem}>\r\n            {props.headers.map(h => <th>{h}</th>)}\r\n        </tr>\r\n    )\r\n}","import classes from \"./Profile.module.css\";\r\nimport React from \"react\";\r\nimport {ItemsListType} from \"./Profile\";\r\n\r\ntype ListItemPropsType = {\r\n    items: Array<ItemsListType>\r\n}\r\n\r\nexport function TBody(props: ListItemPropsType) {\r\n\r\n    return (\r\n        <>\r\n            {\r\n                props.items.map((item, index) => <tr className={classes.listItem} key={index}>\r\n                    <td>{item['name']}</td>\r\n                    <td>{item['cards']}</td>\r\n                    <td>{item['Last updated']}</td>\r\n                    <td>{item['Created by']}</td>\r\n                    <td><button className={classes.btn}>{item['Actions']}</button></td>\r\n                </tr>)\r\n            }\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport {THead} from \"./THead\";\r\nimport {TBody} from \"./TBody\";\r\nimport {EntityListType, ItemsListType} from \"./Profile\";\r\nimport classes from \"./Profile.module.css\";\r\n\r\ntype ListPropsType = {\r\n    headers: EntityListType\r\n    items: Array<ItemsListType>\r\n}\r\n\r\nexport function Table(props: ListPropsType) {\r\n    return (\r\n        <table className={classes.table}>\r\n            <THead headers={props.headers}/>\r\n            <TBody items={props.items}/>\r\n        </table>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport function Search() {\r\n    return <input type=\"search\" placeholder=\"Search...\"/>\r\n}","import React from \"react\";\r\n\r\ntype HeaderPropsType = {\r\n    title: string\r\n}\r\n\r\nexport function Header(props: HeaderPropsType) {\r\n    return <h1>{props.title}</h1>\r\n}","import classes from \"./Profile.module.css\";\r\nimport React, {useState} from \"react\";\r\n\r\nexport function Range() {\r\n    const [value, setValue] = useState(50)\r\n    return (\r\n        <div className={classes.range}>\r\n            <div>Number of cards</div>\r\n            <div><span>{value}</span></div>\r\n            <input type=\"range\" name=\"range\" min=\"0\" max=\"100\" value={value} onChange={e => setValue(+e.currentTarget.value)}/>\r\n        </div>\r\n    )\r\n}","import classes from \"./Profile.module.css\";\r\nimport React from \"react\";\r\n\r\ntype PaginationPropsType = {\r\n    countPage: number\r\n}\r\n\r\nexport function Pagination(props: PaginationPropsType) {\r\n\r\n    const pages = []\r\n\r\n    for (let i = 1; props.countPage >= i; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {pages.map(el => <span className={classes.pagination}>{el}</span>)}\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport classes from './Profile.module.css';\r\nimport {ProfileCard} from \"./1-ProfileCard/ProfileCard\";\r\nimport {Table} from \"./Table\";\r\nimport {Search} from \"./Search\";\r\nimport {Header} from \"./Header\";\r\nimport {Range} from \"./Range\";\r\nimport {Pagination} from \"./Pagination\";\r\n\r\nexport type EntityListType = Array<string>\r\nexport type ProfileDataType = {\r\n    photo: string\r\n    header: string\r\n    description: string\r\n}\r\nexport type ItemsListType = {\r\n    [key: string]: string\r\n}\r\n\r\ntype stateForTestProfileType = {\r\n    pageTitle: string\r\n    list: {\r\n        headers: EntityListType\r\n        items: Array<ItemsListType>\r\n    }\r\n    profileData: ProfileDataType\r\n    countPage: number\r\n}\r\n\r\nconst stateForTestProfile: stateForTestProfileType = {\r\n    pageTitle: 'Packs list Petr’s',\r\n    list: {\r\n        headers: ['Name', 'Cards', 'Last updated', 'Created by', 'Actions'],\r\n        items: [\r\n            {\r\n                'name': 'Pack Name - Name Pack',\r\n                'cards': '4',\r\n                'Last updated': '18.03.2021',\r\n                'Created by': 'Ivan Ivanov',\r\n                'Actions': 'Learn'\r\n            },\r\n            {\r\n                'name': 'Name Pack',\r\n                'cards': '7',\r\n                'Last updated': '15.03.2021',\r\n                'Created by': 'Ivan Pupkin',\r\n                'Actions': 'Learn'\r\n            },\r\n            {\r\n                'name': 'Full pack',\r\n                'cards': '22',\r\n                'Last updated': '20.03.2019',\r\n                'Created by': 'Ignatiy Brynkin',\r\n                'Actions': 'Learn'\r\n            },\r\n            {\r\n                'name': 'Pack Name - Name Pack',\r\n                'cards': '5',\r\n                'Last updated': '01.09.2015',\r\n                'Created by': 'Viktor Ivanov',\r\n                'Actions': 'Learn'\r\n            },\r\n            {\r\n                'name': 'Pack Name',\r\n                'cards': '11',\r\n                'Last updated': '22.12.2010',\r\n                'Created by': 'Andrey See',\r\n                'Actions': 'Learn'\r\n            },\r\n            {\r\n                'name': 'Pack Name - Name Pack',\r\n                'cards': '22',\r\n                'Last updated': '20.03.2019',\r\n                'Created by': 'Ignatiy Brynkin',\r\n                'Actions': 'Learn'\r\n            },\r\n            {\r\n                'name': 'English',\r\n                'cards': '54',\r\n                'Last updated': '01.20.2018',\r\n                'Created by': 'Anton Klevapa',\r\n                'Actions': 'Learn'\r\n            },\r\n            {\r\n                'name': 'JavaScript',\r\n                'cards': '33',\r\n                'Last updated': '12.12.2020',\r\n                'Created by': 'John Smite',\r\n                'Actions': 'Learn'\r\n            },\r\n        ]\r\n    },\r\n    profileData: {\r\n        photo: 'https://us.123rf.com/450wm/axelbueckert/axelbueckert1507/axelbueckert150700010/42097570-happy-young-man-with-big-toothy-smile-isolated-on-white.jpg?ver=6',\r\n        header: 'Petr Ivanov',\r\n        description: 'Front-end developer'\r\n    },\r\n    countPage: 7\r\n}\r\n\r\n\r\nfunction Profile() {\r\n\r\n    const title = stateForTestProfile.pageTitle;\r\n    const headers = stateForTestProfile.list.headers;\r\n    const items = stateForTestProfile.list.items;\r\n    const profileData = stateForTestProfile.profileData;\r\n    const countPage = stateForTestProfile.countPage;\r\n\r\n    return (\r\n        <div className={classes.page}>\r\n            <aside className={classes.sidebar}>\r\n                <ProfileCard profileData={profileData}/>\r\n                <Range/>\r\n            </aside>\r\n            <div className={classes.content}>\r\n                <header className={classes.header}>\r\n                    <Header title={title}/>\r\n                    <Search/>\r\n                </header>\r\n                <main className={classes.main}>\r\n                    <Table headers={headers} items={items}/>\r\n                </main>\r\n                <footer className={classes.footer}>\r\n                    <Pagination countPage={countPage}/>\r\n                </footer>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Profile;\r\n","import axios from \"axios\";\r\n\r\nexport type ForgotRequestType = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n}\r\n\r\nexport type ForgotResponseType = {\r\n    info: string\r\n    success: boolean\r\n    answer: boolean\r\n    html: boolean\r\n}\r\n\r\nexport type SetNewPasswordRequestType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\nexport const restoreAPI = {\r\n    forgotPassword(requestData: ForgotRequestType) {\r\n        return instance.post<ForgotResponseType>(`auth/forgot`, requestData)\r\n    },\r\n    setNewPassword(requestData: SetNewPasswordRequestType) {\r\n        return instance.post(`auth/set-new-password`, requestData)\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {ForgotRequestType, restoreAPI, SetNewPasswordRequestType} from \"../3-dal/restoreAPI\";\r\n\r\ntype InitStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    email: null as string | null,\r\n    restoreEmailSendSuccess: false,\r\n    newPasswordSuccess: false\r\n}\r\n\r\nexport const restoreReducer = (state: InitStateType = initialState, action: UnionRestoreAT) => {\r\n    switch (action.type) {\r\n        case \"restore/SET-RECEIVER-EMAIL\": {\r\n            return {...state, email: action.email}\r\n        }\r\n        case \"restore/EMAIL-SEND-SUCCESS\": {\r\n            return {...state, restoreEmailSendSuccess: action.success}\r\n        }\r\n        case \"restore/CHANGE-PASSWORD-SUCCESS\":\r\n            return {...state, newPasswordSuccess: action.success}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst recoveryMessage = `<div style=\"padding: 15px\">Password recovery link: <a href=\"http://localhost:3000/flashcards#/newPassword/$token$\">click here</a></div>`\r\nconst recoveryMessageAddressFrom = `NEKO ADMIN <ai73a@yandex.by>`\r\n//actions\r\nexport const setReceiverEmailAC = (email: string) => {\r\n    return {type: 'restore/SET-RECEIVER-EMAIL', email} as const\r\n}\r\nexport const emailSendSuccessAC = (success: boolean) => {\r\n    return {type: 'restore/EMAIL-SEND-SUCCESS', success} as const\r\n}\r\nexport const changePasswordSuccessAC = (success: boolean) => {\r\n    return {type: 'restore/CHANGE-PASSWORD-SUCCESS', success} as const\r\n}\r\n//thunks\r\nexport const forgotPasswordTC = (email: string) => async (dispatch: Dispatch<UnionRestoreAT, any>) => {\r\n    try {\r\n        let requestObj: ForgotRequestType = {\r\n            email: email,\r\n            from: recoveryMessageAddressFrom,\r\n            message: recoveryMessage\r\n        }\r\n        const response = await restoreAPI.forgotPassword(requestObj)\r\n        dispatch(setReceiverEmailAC(email))\r\n        dispatch(emailSendSuccessAC(response.data.success))\r\n        dispatch(changePasswordSuccessAC(false))\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const setNewPasswordTC = (password: string, token: string) => async (dispatch: Dispatch<UnionRestoreAT, any>) => {\r\n    try {\r\n        let requestObj: SetNewPasswordRequestType = {\r\n            password: password,\r\n            resetPasswordToken: token\r\n        }\r\n        await restoreAPI.setNewPassword(requestObj)\r\n        dispatch(changePasswordSuccessAC(true))\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\n//action types\r\nexport type UnionRestoreAT = SetReceiverEmailAT | EmailSendSuccessACAT | ChangePasswordSuccessAT\r\ntype SetReceiverEmailAT = ReturnType<typeof setReceiverEmailAC>\r\ntype EmailSendSuccessACAT = ReturnType<typeof emailSendSuccessAC>\r\ntype ChangePasswordSuccessAT = ReturnType<typeof changePasswordSuccessAC>","import React, {ChangeEvent, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {forgotPasswordTC} from \"../../../1-main/2-bll/restoreReducer\";\r\nimport {AppRootStateType} from \"../../../1-main/2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../../1-main/1-ui/routes/Routes\";\r\n\r\nfunction ResetPassword() {\r\n\r\n    const dispatch = useDispatch()\r\n    const restoreEmailSendSuccess = useSelector<AppRootStateType, boolean>(state => state.restore.restoreEmailSendSuccess)\r\n\r\n    const [emailAddress, setEmailAddress] = useState('')\r\n\r\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmailAddress(e.currentTarget.value)\r\n    }\r\n\r\n    const submitEmail = () => {\r\n        dispatch(forgotPasswordTC(emailAddress))\r\n    }\r\n\r\n    if (restoreEmailSendSuccess) {\r\n        return <Redirect to={PATH.CHECK_EMAIL}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>It-incubator</h1>\r\n            <h2>Forgot your password?</h2>\r\n            <input type=\"email\" value={emailAddress} onChange={onChangeEmail}/>\r\n            <p>Enter your email address and we will send you further instructions</p>\r\n            <button onClick={submitEmail}>Send Instructions</button>\r\n            <p>Did you remember your password?</p>\r\n            <a href={'/login'}>Try logging in</a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResetPassword;\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../1-main/2-bll/store\";\r\nimport {setNewPasswordTC} from \"../../../1-main/2-bll/restoreReducer\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport {PATH} from \"../../../1-main/1-ui/routes/Routes\";\r\n\r\nfunction NewPassword() {\r\n\r\n    const dispatch = useDispatch()\r\n    const {token} = useParams<{ token: string }>()\r\n    const changePasswordSuccess = useSelector<AppRootStateType, boolean>(state => state.restore.newPasswordSuccess)\r\n\r\n    const [newPassword, setNewPassword] = useState('')\r\n\r\n    const onChangeNewPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewPassword(e.currentTarget.value)\r\n    }\r\n\r\n    const submitNewPassword = () => {\r\n        dispatch(setNewPasswordTC(newPassword, token))\r\n    }\r\n\r\n    if (changePasswordSuccess) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>It-incubator</h1>\r\n            <h2>Create new password</h2>\r\n            <input type=\"password\" value={newPassword} onChange={onChangeNewPassword}/>\r\n            <p>Create new password and we will send you further instructions to email</p>\r\n            <button onClick={submitNewPassword}>Create new password</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewPassword;\r\n","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../1-main/2-bll/store\";\r\n\r\nfunction CheckEmail() {\r\n\r\n    const emailOfReceiver = useSelector<AppRootStateType, string | null>(state => state.restore.email)\r\n\r\n    return (\r\n        <div>\r\n            <h1>It-incubator</h1>\r\n            <img src=\"\" alt=\"letter img\"/>\r\n            <h2>Check Email</h2>\r\n            <p>We've sent an Email with instructions to {emailOfReceiver}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckEmail;\r\n","import React from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport Test from '../../../2-features/0-test/Test';\r\nimport Error404 from '../../../2-features/1-auth/2-signUp/sign-up-common/Error404/Error404';\r\nimport Login from '../../../2-features/1-auth/1-login/Login';\r\nimport SignUp from '../../../2-features/1-auth/2-signUp/SignUp';\r\nimport Profile from '../../../2-features/2-profile/Profile';\r\nimport ResetPassword from '../../../2-features/restore/1-resetPassword/ResetPassword';\r\nimport NewPassword from '../../../2-features/restore/2-newPassword/NewPassword';\r\nimport CheckEmail from \"../../../2-features/restore/1-resetPassword/CheckEmail\";\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    SIGN_UP: '/signup',\r\n    PROFILE: '/profile',\r\n    RESET_PASSWORD: '/resetPassword',\r\n    CHECK_EMAIL: '/checkEmail',\r\n    NEW_PASSWORD: '/newPassword/:token',\r\n    TEST: '/test'\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.LOGIN}/>}/>\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.SIGN_UP} render={() => <SignUp/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.RESET_PASSWORD} render={() => <ResetPassword/>}/>\r\n                <Route path={PATH.CHECK_EMAIL} render={() => <CheckEmail/>}/>\r\n                <Route path={PATH.NEW_PASSWORD} render={() => <NewPassword/>}/>\r\n                <Route path={PATH.TEST} render={() => <Test/>}/>\r\n                <Route render={() => <Error404/>}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport style from './CustomNavLink.module.css'\r\n\r\ntype CustomNavLinkPropsType = {\r\n    title: string,\r\n    to: string\r\n}\r\n\r\nconst CustomNavLink = (props: CustomNavLinkPropsType) => {\r\n    return (\r\n        <div className={style.navLink}>\r\n            <NavLink to={props.to}>{props.title}</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default CustomNavLink;","import React from 'react';\r\nimport style from './Header.module.css'\r\n\r\nimport {PATH} from \"../routes/Routes\";\r\nimport CustomNavLink from '../../../2-features/1-auth/2-signUp/sign-up-common/CustomNavLink/CustomNavLink';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={style.header}>\r\n            <CustomNavLink title={'profile'} to={PATH.PROFILE}/>\r\n            <CustomNavLink title={'sign-up'} to={PATH.SIGN_UP}/>\r\n            <CustomNavLink title={'login'} to={PATH.LOGIN}/>\r\n            {/*<CustomNavLink title={'new password'} to={PATH.NEW_PASSWORD}/>*/}\r\n            <CustomNavLink title={'reset password'} to={PATH.RESET_PASSWORD}/>\r\n            <CustomNavLink title={'test'} to={PATH.TEST}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Header from './header/Header';\r\nimport Routes from './routes/Routes';\r\n\r\nfunction Main() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Header/>\r\n            <Routes/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","const initialState: any = {}\r\n\r\nexport const profileReducer = (state: any = initialState, action: any) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport {authReducer} from './authReducer';\r\nimport {profileReducer} from './profileReducer';\r\nimport {restoreReducer} from './restoreReducer';\r\nimport {signUpReducer} from \"./signUpReducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    profile: profileReducer,\r\n    restore: restoreReducer,\r\n    signUp: signUpReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n\r\n//@ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\r\nimport './App.module.css';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport Main from './Main';\r\nimport {store} from '../2-bll/store';\r\nimport style from './App.module.css'\r\n\r\n// Initial commit\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={style.App}>\r\n            <HashRouter>\r\n                <Provider store={store}>\r\n                    <Main/>\r\n                </Provider>\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './1-main/1-ui/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}