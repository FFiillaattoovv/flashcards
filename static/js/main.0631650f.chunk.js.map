{"version":3,"sources":["2-features/1-auth/1-login/Login.module.css","2-features/restore/Restore.module.css","2-features/1-auth/2-signUp/sign-up-common/SuperInputText/SuperInputText.module.css","2-features/1-auth/2-signUp/SignUp.module.css","2-features/1-auth/2-signUp/sign-up-common/SuperButton/SuperButton.module.css","2-features/1-auth/2-signUp/sign-up-common/Error404/Error404.module.css","2-features/1-auth/2-signUp/sign-up-common/SuperCheckbox/SuperCheckbox.module.css","2-features/3-cards/Cards.module.css","2-features/2-profile/Profile.module.css","1-main/1-ui/header/Header.module.css","2-features/1-auth/2-signUp/sign-up-common/CustomNavLink/CustomNavLink.module.css","1-main/1-ui/App.module.css","2-features/1-auth/2-signUp/sign-up-common/SuperInputText/SuperInputText.tsx","2-features/1-auth/2-signUp/sign-up-common/SuperButton/SuperButton.tsx","2-features/1-auth/2-signUp/sign-up-common/SuperCheckbox/SuperCheckbox.tsx","2-features/0-test/Test.tsx","2-features/1-auth/2-signUp/sign-up-common/Error404/Error404.tsx","1-main/3-dal/loginAPI.ts","1-main/3-dal/profileAPI.ts","1-main/2-bll/profileReducer.ts","1-main/2-bll/authReducer.ts","2-features/1-auth/1-login/Login.tsx","1-main/3-dal/sign-up-api.ts","1-main/2-bll/signUpReducer.ts","2-features/1-auth/2-signUp/SignUp.tsx","2-features/2-profile/1-ProfileCard/ProfileCard.tsx","2-features/2-profile/THead.tsx","1-main/3-dal/packsAPI.ts","1-main/2-bll/packsReducer.ts","2-features/2-profile/TBody.tsx","2-features/2-profile/Table.tsx","2-features/2-profile/Search.tsx","2-features/2-profile/Header.tsx","2-features/2-profile/Range.tsx","2-features/2-profile/Pagination.tsx","1-main/1-ui/common/Preloader.tsx","2-features/2-profile/Profile.tsx","1-main/3-dal/restoreAPI.ts","1-main/2-bll/restoreReducer.ts","2-features/restore/1-resetPassword/ResetPassword.tsx","2-features/restore/2-newPassword/NewPassword.tsx","2-features/restore/1-resetPassword/CheckEmail.tsx","2-features/3-packs/Packs.tsx","1-main/3-dal/cardsAPI.ts","1-main/2-bll/cardsReducer.ts","2-features/3-cards/Cards.tsx","1-main/1-ui/routes/Routes.tsx","2-features/1-auth/2-signUp/sign-up-common/CustomNavLink/CustomNavLink.tsx","1-main/1-ui/header/Header.tsx","1-main/1-ui/routes/UnauthorizedRoutes.tsx","1-main/1-ui/Main.tsx","1-main/1-ui/App.tsx","reportWebVitals.ts","1-main/2-bll/store.ts","index.tsx"],"names":["module","exports","SuperInputText","React","memo","placeholder","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","console","log","finalSpanClassName","s","input","errorInput","superInput","group","required","e","currentTarget","value","key","SuperButton","color","finalClassName","default","SuperCheckbox","onChangeChecked","children","finalInputClassName","checkbox","checked","Test","useState","text","setText","showAlert","alert","setChecked","disabled","onClick","Error404","classes","container","main","fof","instance","axios","create","baseURL","withCredentials","authAPI","email","password","rememberMe","post","delete","profileAPI","name","avatar","put","initialState","setUserDataAC","updateUserDataTC","dispatch","then","res","updateUserDataAC","data","updatedUser","catch","userId","isAuth","isLoggedIn","isLoading","isLoggedInChange","setError","setIsLoading","setAuthUserData","Login","useDispatch","useSelector","state","auth","setEmail","setPassword","setRememberMe","to","style","loginBlock","loginList","loginTitle","loginInput","rememberBlock","PATH","RESET_PASSWORD","forgotLink","activeClassName","forgotLincActive","btnBlock","loginData","_id","loginText","SIGN_UP","signUpLink","signUpLinkActive","signUpApi","setSignUpErrorAC","SignUp","signUp","signUpError","confirmPassword","setConfirmPassword","onSignUp","rej","response","signUpTC","signUpContainer","onSubmit","LOGIN","signUpForm","buttonsContainer","ProfileCard","props","editModeAvatar","setEditModeAvatar","editModeName","setEditModeName","setAvatar","setName","profile","onBlur","autoFocus","image","onDoubleClick","src","alt","description","THead","listItem","headers","map","h","packsAPI","id","get","cardsPack","packId","cardPacks","cardPacksTotalCount","maxCardsCount","minCardsCount","page","pageCount","getPacksTC","TBody","loggedUserId","items","item","index","lastUpdated","updated","slice","userName","user_name","cardsCount","btn","deletePackTC","marginLeft","updatePackTC","user_id","Table","table","Search","Header","title","Range","setValue","range","min","max","Pagination","pagination","Preloader","Profile","packs","useEffect","sidebar","content","header","footer","restoreAPI","requestData","restoreEmailSendSuccess","newPasswordSuccess","setReceiverEmailAC","changePasswordSuccessAC","success","ResetPassword","restore","emailAddress","setEmailAddress","CHECK_EMAIL","restoreContainer","restoreForm","preventDefault","a","requestObj","from","message","NewPassword","token","useParams","changePasswordSuccess","newPassword","setNewPassword","resetPasswordToken","setNewPasswordTC","CheckEmail","emailOfReceiver","Packs","padding","cardsAPI","initState","cards","packUserId","init","fetchCardsTC","Cards","cardsPack_id","formatDate","date","day","month","year","deleteCard","cardId","getState","deleteCardTC","editCard","card","question","answer","editCardTC","cardsElements","grade","styles","tableContainer","PROFILE","PACKS","NEW_PASSWORD","CARDS","TEST","Routes","path","exact","render","CustomNavLink","navLink","UnauthorizedRoutes","Main","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0631650f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBlock\":\"Login_loginBlock__--uzg\",\"loginList\":\"Login_loginList__1unfP\",\"loginTitle\":\"Login_loginTitle__2XPJ2\",\"loginInput\":\"Login_loginInput__1STqW\",\"rememberBlock\":\"Login_rememberBlock__1fmrK\",\"forgotLink\":\"Login_forgotLink__ho-ZO\",\"forgotLinkActive\":\"Login_forgotLinkActive__1BuvV\",\"btnBlock\":\"Login_btnBlock__f4D2u\",\"loginText\":\"Login_loginText__1mcpT\",\"signUpLink\":\"Login_signUpLink__1F2wY\",\"signUpLinkActive\":\"Login_signUpLinkActive__3Ber0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"restoreContainer\":\"Restore_restoreContainer__pNOwt\",\"restoreForm\":\"Restore_restoreForm__2q58P\",\"error\":\"Restore_error__2vHkR\",\"buttonsContainer\":\"Restore_buttonsContainer__1MLiq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"group\":\"SuperInputText_group__2S800\",\"errorInput\":\"SuperInputText_errorInput__34Qzl\",\"error\":\"SuperInputText_error__jx1Vx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signUpContainer\":\"SignUp_signUpContainer__3gp3q\",\"signUpForm\":\"SignUp_signUpForm__17AjK\",\"error\":\"SignUp_error__2gvSH\",\"buttonsContainer\":\"SignUp_buttonsContainer__Thwab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__h-veD\",\"white\":\"SuperButton_white__3peMs\",\"blue\":\"SuperButton_blue__5JLOT\",\"red\":\"SuperButton_red__gbQyz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Error404_container__3qUyK\",\"main\":\"Error404_main__2H8Cg\",\"fof\":\"Error404_fof__27oWq\",\"type\":\"Error404_type__36aHc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1ar1v\",\"spanClassName\":\"SuperCheckbox_spanClassName__25qhW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContainer\":\"Cards_tableContainer__t1_wU\",\"table\":\"Cards_table__18PZ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Profile_page__1ig7T\",\"sidebar\":\"Profile_sidebar__3FVKA\",\"profile\":\"Profile_profile__1ckON\",\"image\":\"Profile_image__3RvGR\",\"name\":\"Profile_name__vWPKS\",\"description\":\"Profile_description__2M_zJ\",\"range\":\"Profile_range__3tOIG\",\"content\":\"Profile_content__2FNVr\",\"header\":\"Profile_header__ykEE7\",\"main\":\"Profile_main__1Dgqn\",\"listItem\":\"Profile_listItem__2adLH\",\"table\":\"Profile_table__3AEAh\",\"btn\":\"Profile_btn__2S_sp\",\"footer\":\"Profile_footer__3sIyv\",\"pagination\":\"Profile_pagination___DVmq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2AAZ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"CustomNavLink_navLink__1zMvl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__iX4cl\"};","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    type?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = React.memo((\r\n    {\r\n        placeholder, type,\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    console.log(placeholder)\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}`\r\n\r\n    return (\r\n        <div className={s.group}>\r\n            <input\r\n                type={type}\r\n                required\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                // className={finalInputClassName}\r\n                // placeholder={placeholder}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            <label>{placeholder}</label>\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n    color?: 'white' | 'blue' | 'red'\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = React.memo((\r\n    {\r\n        color, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${color ? s[color] : s.default} ${s.default}`\r\n    console.log('SB')\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n})\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport SuperInputText from \"../1-auth/2-signUp/sign-up-common/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../1-auth/2-signUp/sign-up-common/SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../1-auth/2-signUp/sign-up-common/SuperCheckbox/SuperCheckbox\";\r\n\r\n\r\nconst Test = () => {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text)\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n    return (\r\n        <div>\r\n            <h1>test</h1>\r\n            <SuperInputText\r\n                value={text}\r\n                onChangeText={setText}\r\n                onEnter={showAlert}\r\n                error={error}\r\n                // spanClassName={s.testSpanError}\r\n            />\r\n            <SuperButton>\r\n                default\r\n            </SuperButton>\r\n\r\n            <SuperButton disabled>\r\n                disabled\r\n            </SuperButton>\r\n\r\n            <SuperButton\r\n                // red // пропсу с булевым значением не обязательно указывать true\r\n                onClick={showAlert}\r\n            >\r\n                delete {/*// название кнопки попадёт в children*/}\r\n            </SuperButton>\r\n\r\n            <SuperCheckbox\r\n                checked={checked}\r\n                onChangeChecked={setChecked}\r\n            >\r\n                some text\r\n            </SuperCheckbox>\r\n\r\n\r\n            <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Test;","import React from 'react'\r\nimport classes from './Error404.module.css'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={classes.container}>\r\n            <div className={classes.main}>\r\n                <div className={classes.fof}>\r\n                    <h1>Error 404</h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true,\r\n})\r\n\r\nexport const authAPI = {\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<LoginResponseType>('auth/login', {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete<InfoResponseType>('auth/me')\r\n    },\r\n    me() {\r\n        return instance.post<ResponseType>('auth/me', {})\r\n    },\r\n}\r\n\r\n// types\r\nexport type LoginResponseType = {\r\n    avatar: string,\r\n    created: string,\r\n    deviceTokens: DeviceTokenType [],\r\n    email: string,\r\n    isAdmin: boolean,\r\n    name: string,\r\n    publicCardPacksCount: number,\r\n    rememberMe: boolean,\r\n    token: string,\r\n    tokenDeathTime: number,\r\n    updated: string,\r\n    verified: boolean,\r\n    __v: number,\r\n    _id: string,\r\n}\r\ntype DeviceTokenType = {\r\n    _id: string,\r\n    device: string,\r\n}\r\nexport type InfoResponseType = {\r\n    info: string,\r\n    error?: string\r\n}\r\nexport type ResponseType = UserType & {\r\n    created: string,\r\n    deviceTokens?: DeviceTokenType [],\r\n    isAdmin: boolean,\r\n    rememberMe: boolean,\r\n    token: string,\r\n    tokenDeathTime: number,\r\n    updated: string,\r\n    verified: boolean,\r\n    error?: string,\r\n}\r\nexport type UserType = {\r\n    _id: string,\r\n    email: string,\r\n    name: string,\r\n    avatar: string,\r\n    publicCardPacksCount: number,\r\n}","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\nexport const profileAPI = {\r\n    updateProfile(name: string, avatar: string) {\r\n        return instance.put<UpdateProfileResponseType>(`auth/me`, {name: name, avatar: avatar})\r\n    },\r\n}\r\n\r\n// types\r\nexport type UpdateProfileResponseType = {\r\n    updatedUser: {\r\n        name: string\r\n        avatar: string\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {profileAPI} from \"../3-dal/profileAPI\";\r\n\r\nconst initialState: initialStateType = {\r\n    name: '',\r\n    avatar: ''\r\n}\r\n\r\nexport const profileReducer = (state: initialStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"SET-USER-DATA\": {\r\n            return {\r\n                ...state,\r\n                name: action.name,\r\n                avatar: action.avatar,\r\n            }\r\n        }\r\n        case \"SET-UPDATED-USER-DATA\": {\r\n            return {\r\n                ...state,\r\n                name: action.name,\r\n                avatar: action.avatar,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setUserDataAC = (name: string, avatar: string) => ({type: 'SET-USER-DATA', name, avatar} as const)\r\nexport const updateUserDataAC = (name: string, avatar: string) => ({type: 'SET-UPDATED-USER-DATA', name, avatar} as const)\r\n\r\n// thunks\r\nexport const updateUserDataTC = (name: string, avatar: string) => (dispatch: Dispatch<ActionsType, null>) => {\r\n    profileAPI.updateProfile(name, avatar)\r\n        .then((res) => {\r\n            dispatch(updateUserDataAC(res.data.updatedUser.name, res.data.updatedUser.avatar))\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n}\r\n\r\n\r\n// types\r\ntype initialStateType = {\r\n    name: string\r\n    avatar: string\r\n}\r\n\r\ntype ActionsType = SetUserDataActionType | UpdateUserDataActionType\r\n\r\nexport type SetUserDataActionType = ReturnType<typeof setUserDataAC>\r\ntype UpdateUserDataActionType = ReturnType<typeof updateUserDataAC>\r\n","import {authAPI} from '../3-dal/loginAPI';\r\nimport {Dispatch} from 'redux';\r\nimport {setUserDataAC, SetUserDataActionType} from \"./profileReducer\";\r\n\r\n\r\nconst initialState = {\r\n    userId: '',\r\n    email: '',\r\n    isAuth: false,\r\n    isLoggedIn: false,\r\n    error: '',\r\n    isLoading: false\r\n}\r\n\r\nexport const authReducer = (state = initialState, action: ActionsType): typeof initialState => {\r\n    switch (action.type) {\r\n        case \"IS-LOGGED-IN-CHANGE\": {\r\n            return {\r\n                ...state, isLoggedIn: action.isLoggedIn\r\n            }\r\n        }\r\n        case \"SET-ERROR\": {\r\n            return {\r\n                ...state, error: action.error\r\n            }\r\n        }\r\n        case \"SET-IS-LOADING\": {\r\n            return {\r\n                ...state, isLoading: action.isLoading\r\n            }\r\n        }\r\n        case \"SET-AUTH-USER-DATA\": {\r\n            return {\r\n                ...state,\r\n                userId: action.userId,\r\n                email: action.email,\r\n                isAuth: action.isAuth\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//AC\r\nexport const isLoggedInChange = (isLoggedIn: boolean) => ({type: 'IS-LOGGED-IN-CHANGE', isLoggedIn}) as const\r\nexport const setError = (error: string) => ({type: 'SET-ERROR', error}) as const\r\nexport const setIsLoading = (isLoading: boolean) => ({type: 'SET-IS-LOADING', isLoading}) as const\r\nexport const setAuthUserData = (userId: string, email: string, isAuth: boolean) => ({\r\n    type: 'SET-AUTH-USER-DATA',\r\n    userId: userId,\r\n    email: email,\r\n    isAuth: isAuth\r\n}) as const\r\n\r\n//Thunks\r\nexport const loginSuccess = (loginData: LoginDataType) => (dispatch: Dispatch<ActionsType, null>) => {\r\n    dispatch(setIsLoading(true))\r\n    authAPI.login(loginData.email, loginData.password, loginData.rememberMe)\r\n        .then((res) => {\r\n            dispatch(isLoggedInChange(true))\r\n            dispatch(setIsLoading(false))\r\n            // dispatch(getMe())\r\n            dispatch(setAuthUserData(res.data._id, res.data.email, true))\r\n            dispatch(setUserDataAC(res.data.name, res.data.avatar))\r\n            dispatch(setError(''))\r\n        })\r\n        .catch(() => {\r\n            dispatch(isLoggedInChange(false))\r\n            dispatch(setIsLoading(false))\r\n        })\r\n}\r\nexport const logoutSuccess = () => (dispatch: Dispatch<ActionsType, null>) => {\r\n    dispatch(setAuthUserData('', '', false))\r\n    dispatch(setUserDataAC('', ''))\r\n    authAPI.logout()\r\n        .then(() => {})\r\n        .catch((error) => {\r\n            dispatch(setError(error.response.data.error))\r\n        })\r\n}\r\nexport const getMe = () => {\r\n    return async (dispatch: any) => {\r\n        const res = await authAPI.me()\r\n        let {_id, email} = res.data\r\n        dispatch(setAuthUserData(_id, email, true))\r\n        dispatch(setUserDataAC(res.data.name, res.data.avatar))\r\n    }\r\n}\r\n// types\r\ntype ActionsType = ReturnType<typeof isLoggedInChange>\r\n    | ReturnType<typeof setError>\r\n    | ReturnType<typeof setIsLoading>\r\n    | ReturnType<typeof setAuthUserData>\r\n    | SetUserDataActionType\r\n\r\ntype LoginDataType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean,\r\n}\r\n\r\n\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport {PATH} from '../../../1-main/1-ui/routes/Routes';\r\nimport style from './Login.module.css'\r\nimport {loginSuccess} from '../../../1-main/2-bll/authReducer';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../1-main/2-bll/store';\r\nimport SuperCheckbox from '../2-signUp/sign-up-common/SuperCheckbox/SuperCheckbox';\r\nimport SuperButton from '../2-signUp/sign-up-common/SuperButton/SuperButton';\r\nimport SuperInputText from '../2-signUp/sign-up-common/SuperInputText/SuperInputText';\r\n\r\n\r\nfunction Login() {\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.auth.isAuth)\r\n    const error = useSelector<AppRootStateType, string>(state => state.auth.error)\r\n    const isLoading = useSelector<AppRootStateType, boolean>(state => state.auth.isLoading)\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [rememberMe, setRememberMe] = useState(false)\r\n\r\n    const emailHandler = (e: ChangeEvent<HTMLInputElement>) => setEmail(e.currentTarget.value)\r\n    const passwordHandler = (e: ChangeEvent<HTMLInputElement>) => setPassword(e.currentTarget.value)\r\n    const rememberMeHandler = () => setRememberMe(!rememberMe)\r\n    const loginHandler = () => {\r\n        dispatch(loginSuccess({email, password, rememberMe}))\r\n    }\r\n    if(isAuth){\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n    return (\r\n        <div className={style.loginBlock}>\r\n            <div className={style.loginList}>\r\n                <h1 className={style.loginTitle}>Login</h1>\r\n                {isLoading ? <div style={{color: 'green'}}>Loading...</div> : ''}\r\n                <SuperInputText className={style.loginInput} placeholder={'Email'} value={email} onChange={emailHandler}/>\r\n                <SuperInputText className={style.loginInput} placeholder={'Password'} value={password} onChange={passwordHandler}/>\r\n                <div className={style.rememberBlock}>\r\n                    <SuperCheckbox checked={rememberMe} onClick={rememberMeHandler}>Remember me</SuperCheckbox>\r\n                    <NavLink to={PATH.RESET_PASSWORD} className={style.forgotLink} activeClassName={style.forgotLincActive}>Forgot password</NavLink>\r\n                </div>\r\n                <div className={style.btnBlock}>\r\n                    <SuperButton color={'blue'} onClick={loginHandler}>Login</SuperButton>\r\n                    <div className={style.loginText}>Don't have an account?</div>\r\n                    <NavLink to={PATH.SIGN_UP} className={style.signUpLink} activeClassName={style.signUpLinkActive}>Sign Up</NavLink>\r\n\r\n                </div>\r\n                {error ? <div style={{color: 'red'}}>{error}</div> : ''}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n})\r\n\r\n// api\r\nexport const signUpApi = {\r\n    createNewAccount(email: string, password: string) {\r\n        return instance.post('auth/register', {email, password});\r\n    }\r\n}\r\n\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {signUpApi} from \"../3-dal/sign-up-api\";\r\n\r\ntype initialStateType = {\r\n    isLoggedIn: boolean\r\n    error: null | string\r\n}\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    error: '',\r\n}\r\n\r\nexport const signUpReducer = (state: initialStateType = initialState, action: ActionsType):initialStateType => {\r\n    switch (action.type) {\r\n        case \"SET-IS_LOGGED_IN\":\r\n            return {...state, isLoggedIn: action.value}\r\n        case \"SET-ERROR\":\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setIsLoggedInAC = (value: boolean) => {\r\n    return {type: 'SET-IS_LOGGED_IN', value} as const\r\n}\r\nexport const setSignUpErrorAC = (error: string) => {\r\n    return {type: 'SET-ERROR', error} as const\r\n}\r\n\r\n\r\nexport const signUpTC = (email: string, password: string) => (dispatch: Dispatch<ActionsType, ActionsType>) => {\r\n    signUpApi.createNewAccount(email, password)\r\n        .then(res => {\r\n            dispatch(setIsLoggedInAC(true))\r\n        })\r\n        .catch(rej=>{\r\n            dispatch(setSignUpErrorAC(rej.response.data.error))\r\n        })\r\n}\r\n\r\nexport type SetIsLoggedInActionType = ReturnType<typeof setIsLoggedInAC>\r\nexport type SetSignUpErrorACActionType = ReturnType<typeof setSignUpErrorAC>\r\n\r\ntype ActionsType = SetIsLoggedInActionType | SetSignUpErrorACActionType","import React, {useState} from 'react';\r\nimport SuperButton from \"./sign-up-common/SuperButton/SuperButton\";\r\nimport SuperInputText from \"./sign-up-common/SuperInputText/SuperInputText\";\r\nimport style from './SignUp.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setSignUpErrorAC, signUpTC} from \"../../../1-main/2-bll/signUpReducer\";\r\nimport {AppRootStateType} from \"../../../1-main/2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../../1-main/1-ui/routes/Routes\";\r\n\r\nfunction SignUp() {\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppRootStateType>((state) => state.signUp.isLoggedIn)\r\n    const signUpError = useSelector<AppRootStateType, string | null>(state => state.signUp.error)\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [confirmPassword, setConfirmPassword] = useState<string>('')\r\n\r\n    const onSignUp = () => {\r\n        password === confirmPassword\r\n            ? dispatch(signUpTC(email, password))\r\n            : dispatch(setSignUpErrorAC('Password mismatch'))\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        onSignUp()\r\n    }\r\n    const onCancel = () => {\r\n        setEmail('')\r\n        setPassword('')\r\n        setConfirmPassword('')\r\n        dispatch(setSignUpErrorAC(''))\r\n    }\r\n\r\n    return (\r\n        <div className={style.signUpContainer} onSubmit={handleSubmit}>\r\n            {isLoggedIn && <Redirect to={PATH.LOGIN}/>}\r\n            <form className={style.signUpForm}>\r\n                <div>\r\n                    <h3>Create a new account</h3>\r\n                    {signUpError && <span className={style.error}>{signUpError}</span>}\r\n                </div>\r\n                <div>\r\n                    <SuperInputText\r\n                        value={email}\r\n                        onChangeText={setEmail}\r\n                        onEnter={onSignUp}\r\n                        type={'text'}\r\n                        placeholder={'Email'}\r\n                    />\r\n                    <SuperInputText\r\n                        value={password}\r\n                        onChangeText={setPassword}\r\n                        onEnter={onSignUp}\r\n                        type={'Password'}\r\n                        placeholder={'Password'}\r\n                    />\r\n                    <SuperInputText\r\n                        value={confirmPassword}\r\n                        onChangeText={setConfirmPassword}\r\n                        onEnter={onSignUp}\r\n                        type={'Password'}\r\n                        placeholder={'Confirm Password'}\r\n                    />\r\n                </div>\r\n                <div className={style.buttonsContainer}>\r\n                    <SuperButton type={'button'} onClick={onCancel} color={'white'}>Cancel</SuperButton>\r\n                    <SuperButton type={'submit'} color={'blue'}>Register</SuperButton>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignUp;\r\n","import classes from \"../Profile.module.css\";\r\nimport React, {useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {updateUserDataTC} from \"../../../1-main/2-bll/profileReducer\";\r\n\r\ntype ProfileCardPropsType = {\r\n    name: string\r\n    avatar: string\r\n}\r\n\r\nexport function ProfileCard(props: ProfileCardPropsType) {\r\n    const [editModeAvatar, setEditModeAvatar] = useState(false)\r\n    const [editModeName, setEditModeName] = useState(false)\r\n    let [avatar, setAvatar] = useState(props.avatar)\r\n    let [name, setName] = useState(props.name)\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className={classes.profile}>\r\n            {\r\n                editModeAvatar\r\n                    ? <input type=\"text\"\r\n                             onBlur={() => {\r\n                                 setEditModeAvatar(false)\r\n                                 if (name && avatar) {\r\n                                     dispatch(updateUserDataTC(name, avatar))\r\n                                 }\r\n                             }}\r\n                             value={avatar}\r\n                             onChange={(e) => setAvatar(e.currentTarget.value)}\r\n                             autoFocus={true}/>\r\n                    : <div className={classes.image}\r\n                           onDoubleClick={() => setEditModeAvatar(true)}>&#9998;<img src={avatar} alt=\"User\"/></div>\r\n            }\r\n            {\r\n                editModeName\r\n                    ? <input type=\"text\"\r\n                             onBlur={() => {\r\n                                 setEditModeName(false)\r\n                                 if (name && avatar) {\r\n                                     dispatch(updateUserDataTC(name, avatar))\r\n                                 }\r\n                             }}\r\n                             value={name}\r\n                             onChange={(e) => setName(e.currentTarget.value)}\r\n                             autoFocus={true}/>\r\n                    : <div className={classes.name} onDoubleClick={() => setEditModeName(true)}>&#9998;{name}</div>\r\n            }\r\n            <div className={classes.description}>{'Front-end developer'}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import classes from \"./Profile.module.css\";\r\nimport React from \"react\";\r\nimport {EntityListType} from \"./Profile\";\r\n\r\ntype ListHeaderPropsType = {\r\n    headers: EntityListType\r\n}\r\n\r\nexport function THead(props: ListHeaderPropsType) {\r\n    return (\r\n        <tr className={classes.listItem}>\r\n            {props.headers.map(h => <th>{h}</th>)}\r\n        </tr>\r\n    )\r\n}","import axios from 'axios';\r\nimport {CardPacksType} from \"../2-bll/packsReducer\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\nexport const packsAPI = {\r\n    getPacks(userId?: string) {\r\n        const id = userId ? `&user_id=${userId}` : ''\r\n        return instance.get<GetPacksResponseType>(`cards/pack?pageCount=8${id}`)\r\n    },\r\n    addPack() {\r\n        return instance.post<GetPacksResponseType>('cards/pack', {cardsPack: {name: 'English pack'}})\r\n    },\r\n    deletePack(packId: string) {\r\n        return instance.delete<GetPacksResponseType>(`cards/pack?id=${packId}`)\r\n    },\r\n    updatePack(packId: string) {\r\n        return instance.put<GetPacksResponseType>(`cards/pack`, {\r\n            cardsPack: {\r\n                _id: packId,\r\n                name: 'German pack'\r\n            }\r\n        })\r\n    },\r\n}\r\n\r\n// types\r\nexport type GetPacksResponseType = {\r\n    cardPacks: Array<CardPacksType>\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n}","import {Dispatch} from 'redux';\r\nimport {GetPacksResponseType, packsAPI} from \"../3-dal/packsAPI\";\r\n\r\n\r\nconst initialState: initialStateType = {\r\n    cardPacks: [],\r\n    cardPacksTotalCount: null,\r\n    maxCardsCount: null,\r\n    minCardsCount: null,\r\n    page: null,\r\n    pageCount: null,\r\n}\r\n\r\nexport const packsReducer = (state: initialStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"SET-PACKS\": {\r\n            return {\r\n                ...state,\r\n                cardPacks: [...action.data.cardPacks],\r\n                cardPacksTotalCount: action.data.cardPacksTotalCount,\r\n                maxCardsCount: action.data.maxCardsCount,\r\n                minCardsCount: action.data.minCardsCount,\r\n                page: action.data.page,\r\n                pageCount: action.data.pageCount,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setPacksAC = (data: GetPacksResponseType) => ({type: 'SET-PACKS', data} as const)\r\n\r\n\r\n// thunks\r\nexport const getPacksTC = (userId?: string) => (dispatch: Dispatch<ActionsType, null>) => {\r\n    packsAPI.getPacks(userId)\r\n        .then((res) => {\r\n            dispatch(setPacksAC(res.data))\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n}\r\nexport const addPackTC = () => (dispatch: Dispatch<ActionsType, null>) => {\r\n    packsAPI.addPack()\r\n        .then(() => {\r\n            dispatch(getPacksTC())\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n}\r\nexport const deletePackTC = (packId: string) => (dispatch: Dispatch<ActionsType, null>) => {\r\n    packsAPI.deletePack(packId)\r\n        .then(() => {\r\n            dispatch(getPacksTC())\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n}\r\nexport const updatePackTC = (packId: string) => (dispatch: Dispatch<ActionsType, null>) => {\r\n    packsAPI.updatePack(packId)\r\n        .then(() => {\r\n            dispatch(getPacksTC())\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n}\r\n\r\n// types\r\nexport type CardPacksType = {\r\n    cardsCount: number\r\n    created: string\r\n    more_id: string\r\n    name: string\r\n    private: boolean\r\n    updated: string\r\n    user_id: string\r\n    user_name: string\r\n    _id: string\r\n}\r\ntype initialStateType = {\r\n    cardPacks: Array<CardPacksType>\r\n    cardPacksTotalCount: number | null\r\n    maxCardsCount: number | null\r\n    minCardsCount: number | null\r\n    page: number | null\r\n    pageCount: number | null\r\n}\r\n\r\ntype ActionsType = SetPacksActionType\r\n\r\ntype SetPacksActionType = ReturnType<typeof setPacksAC>\r\n\r\n\r\n","import classes from \"./Profile.module.css\";\r\nimport React from \"react\";\r\nimport {CardPacksType, deletePackTC, updatePackTC} from \"../../1-main/2-bll/packsReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../1-main/2-bll/store\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype ListItemPropsType = {\r\n    items: Array<CardPacksType>\r\n}\r\n\r\n\r\nexport function TBody(props: ListItemPropsType) {\r\n    const dispatch = useDispatch()\r\n    const loggedUserId = useSelector<AppRootStateType, string>(state => state.auth.userId)\r\n\r\n    return (\r\n        <>\r\n            {\r\n                props.items.map((item, index) => {\r\n                    const lastUpdated = item.updated.slice(0, 10)\r\n                    const userName = item.user_name.slice(0, 30)\r\n                    const packId = item._id\r\n\r\n                    const deletePackHandler = () => {\r\n                        dispatch(deletePackTC(packId))\r\n                    }\r\n                    const editPackHandler = () => {\r\n                        dispatch(updatePackTC(packId))\r\n                    }\r\n\r\n                    return <tr className={classes.listItem} key={index}>\r\n                        <td>{item.name}</td>\r\n                        <td>{item.cardsCount}</td>\r\n                        <td>{lastUpdated}</td>\r\n                        <td>{userName}</td>\r\n                        <td>\r\n                            <button className={classes.btn} onClick={deletePackHandler}>{'Delete'}</button>\r\n                            <button style={{marginLeft: \"10px\"}} className={classes.btn}\r\n                                    onClick={editPackHandler}>{'Edit'}</button>\r\n                            {item.user_id === loggedUserId &&\r\n                            <NavLink to={`/cards/${item._id}`}><button style={{marginLeft: \"10px\"}}\r\n                                    className={classes.btn}>{'Cards'}</button></NavLink>}\r\n                        </td>\r\n                    </tr>\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport {THead} from \"./THead\";\r\nimport {TBody} from \"./TBody\";\r\nimport {EntityListType, ItemsListType} from \"./Profile\";\r\nimport classes from \"./Profile.module.css\";\r\nimport {CardPacksType} from \"../../1-main/2-bll/packsReducer\";\r\n\r\ntype ListPropsType = {\r\n    headers: EntityListType\r\n    items: Array<CardPacksType>\r\n}\r\n\r\nexport function Table(props: ListPropsType) {\r\n    return (\r\n        <table className={classes.table}>\r\n            <THead headers={props.headers}/>\r\n            <TBody items={props.items}/>\r\n        </table>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport function Search() {\r\n    return <input type=\"search\" placeholder=\"Search...\"/>\r\n}","import React from \"react\";\r\n\r\ntype HeaderPropsType = {\r\n    title: string\r\n}\r\n\r\nexport function Header(props: HeaderPropsType) {\r\n    return <h1>{props.title}</h1>\r\n}","import classes from \"./Profile.module.css\";\r\nimport React, {useState} from \"react\";\r\n\r\nexport function Range() {\r\n    const [value, setValue] = useState(50)\r\n    return (\r\n        <div className={classes.range}>\r\n            <div>Number of cards</div>\r\n            <div><span>{value}</span></div>\r\n            <input type=\"range\" name=\"range\" min=\"0\" max=\"100\" value={value} onChange={e => setValue(+e.currentTarget.value)}/>\r\n        </div>\r\n    )\r\n}","import classes from \"./Profile.module.css\";\r\nimport React from \"react\";\r\n\r\ntype PaginationPropsType = {\r\n    page: number | null\r\n}\r\n\r\nexport function Pagination(props: PaginationPropsType) {\r\n\r\n    return (\r\n        <>\r\n            {<span className={classes.pagination}>{props.page}</span>}\r\n        </>\r\n    )\r\n}","import React from 'react';\r\n\r\nfunction Preloader() {\r\n    return (\r\n        <div>\r\n            Loading...\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Preloader;\r\n","import React, {useEffect} from 'react';\r\nimport classes from './Profile.module.css';\r\nimport {ProfileCard} from \"./1-ProfileCard/ProfileCard\";\r\nimport {Table} from \"./Table\";\r\nimport {Search} from \"./Search\";\r\nimport {Header} from \"./Header\";\r\nimport {Range} from \"./Range\";\r\nimport {Pagination} from \"./Pagination\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../1-main/2-bll/store\";\r\nimport {CardPacksType, getPacksTC} from \"../../1-main/2-bll/packsReducer\";\r\nimport Preloader from \"../../1-main/1-ui/common/Preloader\";\r\n\r\n\r\nfunction Profile() {\r\n    const name = useSelector<AppRootStateType, string>(state => state.profile.name)\r\n    const avatar = useSelector<AppRootStateType, string>(state => state.profile.avatar)\r\n    const cardPacks = useSelector<AppRootStateType, Array<CardPacksType>>(state => state.packs.cardPacks)\r\n    const page = useSelector<AppRootStateType, number | null>(state => state.packs.page)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getPacksTC())\r\n    }, [dispatch])\r\n\r\n    if (!(name || avatar)) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={classes.page}>\r\n            <aside className={classes.sidebar}>\r\n                <ProfileCard name={name} avatar={avatar}/>\r\n                <Range/>\r\n            </aside>\r\n            <div className={classes.content}>\r\n                <header className={classes.header}>\r\n                    <Header title={`Packs list ${name}`}/>\r\n                    <Search/>\r\n                </header>\r\n                <main className={classes.main}>\r\n                    <Table headers={['Name', 'Cards', 'Last Updated', 'Created by', 'Actions']} items={cardPacks}/>\r\n                </main>\r\n                <footer className={classes.footer}>\r\n                    <Pagination page={page}/>\r\n                </footer>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n// Types\r\nexport type EntityListType = Array<string>\r\nexport type ItemsListType = {\r\n    [key: string]: string\r\n}\r\n\r\n\r\nexport default Profile;\r\n","import axios from \"axios\";\r\n\r\nexport type ForgotRequestType = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n}\r\n\r\nexport type ForgotResponseType = {\r\n    info: string\r\n    success: boolean\r\n    answer: boolean\r\n    html: boolean\r\n}\r\n\r\nexport type SetNewPasswordRequestType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\nexport const restoreAPI = {\r\n    forgotPassword(requestData: ForgotRequestType) {\r\n        return instance.post<ForgotResponseType>(`auth/forgot`, requestData)\r\n    },\r\n    setNewPassword(requestData: SetNewPasswordRequestType) {\r\n        return instance.post(`auth/set-new-password`, requestData)\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {ForgotRequestType, restoreAPI, SetNewPasswordRequestType} from \"../3-dal/restoreAPI\";\r\n\r\ntype InitStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    email: null as string | null,\r\n    restoreEmailSendSuccess: false,\r\n    newPasswordSuccess: false\r\n}\r\n\r\nexport const restoreReducer = (state: InitStateType = initialState, action: UnionRestoreAT) => {\r\n    switch (action.type) {\r\n        case \"restore/SET-RECEIVER-EMAIL\": {\r\n            return {...state, email: action.email}\r\n        }\r\n        case \"restore/EMAIL-SEND-SUCCESS\": {\r\n            return {...state, restoreEmailSendSuccess: action.success}\r\n        }\r\n        case \"restore/CHANGE-PASSWORD-SUCCESS\":\r\n            return {...state, newPasswordSuccess: action.success}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst recoveryMessage = `<div style=\"padding: 15px\">Password recovery link: <a href=\"https://ffiillaattoovv.github.io/flashcards#/newPassword/$token$\">click here</a></div>`\r\nconst recoveryMessageAddressFrom = `NEKO ADMIN <ai73a@yandex.by>`\r\n//actions\r\nexport const setReceiverEmailAC = (email: string) => {\r\n    return {type: 'restore/SET-RECEIVER-EMAIL', email} as const\r\n}\r\nexport const emailSendSuccessAC = (success: boolean) => {\r\n    return {type: 'restore/EMAIL-SEND-SUCCESS', success} as const\r\n}\r\nexport const changePasswordSuccessAC = (success: boolean) => {\r\n    return {type: 'restore/CHANGE-PASSWORD-SUCCESS', success} as const\r\n}\r\n//thunks\r\nexport const forgotPasswordTC = (email: string) => async (dispatch: Dispatch<UnionRestoreAT, null>) => {\r\n    try {\r\n        let requestObj: ForgotRequestType = {\r\n            email: email,\r\n            from: recoveryMessageAddressFrom,\r\n            message: recoveryMessage\r\n        }\r\n        const response = await restoreAPI.forgotPassword(requestObj)\r\n        dispatch(setReceiverEmailAC(email))\r\n        dispatch(emailSendSuccessAC(response.data.success))\r\n        dispatch(changePasswordSuccessAC(false))\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const setNewPasswordTC = (password: string, token: string) => async (dispatch: Dispatch<UnionRestoreAT, null>) => {\r\n    try {\r\n        let requestObj: SetNewPasswordRequestType = {\r\n            password: password,\r\n            resetPasswordToken: token\r\n        }\r\n        await restoreAPI.setNewPassword(requestObj)\r\n        dispatch(changePasswordSuccessAC(true))\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\n//action types\r\nexport type UnionRestoreAT = SetReceiverEmailAT | EmailSendSuccessACAT | ChangePasswordSuccessAT\r\ntype SetReceiverEmailAT = ReturnType<typeof setReceiverEmailAC>\r\ntype EmailSendSuccessACAT = ReturnType<typeof emailSendSuccessAC>\r\ntype ChangePasswordSuccessAT = ReturnType<typeof changePasswordSuccessAC>","import React, {ChangeEvent, useState, MouseEvent} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {forgotPasswordTC} from \"../../../1-main/2-bll/restoreReducer\";\r\nimport {AppRootStateType} from \"../../../1-main/2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../../1-main/1-ui/routes/Routes\";\r\nimport style from '../Restore.module.css';\r\nimport SuperInputText from \"../../1-auth/2-signUp/sign-up-common/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../1-auth/2-signUp/sign-up-common/SuperButton/SuperButton\";\r\n\r\nfunction ResetPassword() {\r\n\r\n    const dispatch = useDispatch()\r\n    const restoreEmailSendSuccess = useSelector<AppRootStateType, boolean>(state => state.restore.restoreEmailSendSuccess)\r\n\r\n    const [emailAddress, setEmailAddress] = useState('')\r\n\r\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmailAddress(e.currentTarget.value)\r\n    }\r\n\r\n    const submitEmail = (e: MouseEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        dispatch(forgotPasswordTC(emailAddress))\r\n    }\r\n\r\n    if (restoreEmailSendSuccess) {\r\n        return <Redirect to={PATH.CHECK_EMAIL}/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.restoreContainer}>\r\n            <form className={style.restoreForm} onSubmit={submitEmail}>\r\n                <div>\r\n                    <h3>Forgot your password?</h3>\r\n                </div>\r\n                <div>\r\n                    <SuperInputText\r\n                        value={emailAddress}\r\n                        onChange={onChangeEmail}\r\n                        type={'text'}\r\n                        placeholder={'Email'}\r\n                    />\r\n                </div>\r\n                <div className={style.buttonsContainer}>\r\n                    <SuperButton type={'submit'} color={'blue'}>Send instructions</SuperButton>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResetPassword;\r\n","import React, {ChangeEvent, useState, MouseEvent} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../1-main/2-bll/store\";\r\nimport {setNewPasswordTC} from \"../../../1-main/2-bll/restoreReducer\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport {PATH} from \"../../../1-main/1-ui/routes/Routes\";\r\nimport style from \"../Restore.module.css\";\r\nimport SuperInputText from \"../../1-auth/2-signUp/sign-up-common/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../1-auth/2-signUp/sign-up-common/SuperButton/SuperButton\";\r\n\r\nfunction NewPassword() {\r\n\r\n    const dispatch = useDispatch()\r\n    const {token} = useParams<{ token: string }>()\r\n    const changePasswordSuccess = useSelector<AppRootStateType, boolean>(state => state.restore.newPasswordSuccess)\r\n\r\n    const [newPassword, setNewPassword] = useState('')\r\n\r\n    const onChangeNewPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewPassword(e.currentTarget.value)\r\n    }\r\n\r\n    const submitNewPassword = (e: MouseEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        dispatch(setNewPasswordTC(newPassword, token))\r\n    }\r\n\r\n    if (changePasswordSuccess) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.restoreContainer}>\r\n            <form className={style.restoreForm} onSubmit={submitNewPassword}>\r\n                <div>\r\n                    <h3>Create new password</h3>\r\n                </div>\r\n                <div>\r\n                    <SuperInputText\r\n                        value={newPassword}\r\n                        onChange={onChangeNewPassword}\r\n                        type={'password'}\r\n                        placeholder={'New password'}\r\n                    />\r\n                </div>\r\n                <p>Create new password and log in with it afterwards</p>\r\n                <div className={style.buttonsContainer}>\r\n                    <SuperButton type={'submit'} color={'blue'}>Create new password</SuperButton>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewPassword;\r\n","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../1-main/2-bll/store\";\r\nimport style from '../Restore.module.css';\r\n\r\nfunction CheckEmail() {\r\n\r\n    const emailOfReceiver = useSelector<AppRootStateType, string | null>(state => state.restore.email)\r\n\r\n    return (\r\n        <div className={style.restoreContainer}>\r\n            <div className={style.restoreForm}>\r\n                <h3>Check Email</h3>\r\n                <img src=\"\" alt=\"letter img\"/>\r\n                <p>We've sent an Email with instructions to {emailOfReceiver}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckEmail;\r\n","import React, {useEffect} from 'react';\r\nimport classes from \"../2-profile/Profile.module.css\";\r\nimport {Range} from \"../2-profile/Range\";\r\nimport {Header} from \"../2-profile/Header\";\r\nimport {Search} from \"../2-profile/Search\";\r\nimport {Table} from \"../2-profile/Table\";\r\nimport {Pagination} from \"../2-profile/Pagination\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../1-main/2-bll/store\";\r\nimport {addPackTC, CardPacksType, getPacksTC} from \"../../1-main/2-bll/packsReducer\";\r\n\r\n\r\nconst Packs = () => {\r\n    const page = useSelector<AppRootStateType, number | null>(state => state.packs.page)\r\n    const cardPacks = useSelector<AppRootStateType, Array<CardPacksType>>(state => state.packs.cardPacks)\r\n    const userId = useSelector<AppRootStateType, string>(state => state.auth.userId)\r\n    const dispatch = useDispatch()\r\n\r\n    const addNewPackHandler = () => {\r\n        dispatch(addPackTC())\r\n    }\r\n    const getMyPacksHandler = () => {\r\n        dispatch(getPacksTC(userId))\r\n    }\r\n    const getAllPacksHandler = () => {\r\n        dispatch(getPacksTC())\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getPacksTC())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className={classes.page}>\r\n            <aside className={classes.sidebar}>\r\n                <div className={classes.profile}>\r\n                    <div style={{padding: \"80px\"}}>\r\n                        <button onClick={getMyPacksHandler}>My</button>\r\n                        <button onClick={getAllPacksHandler}>All</button>\r\n                    </div>\r\n                </div>\r\n                <Range/>\r\n            </aside>\r\n            <div className={classes.content}>\r\n                <header className={classes.header}>\r\n                    <Header title={'Packs list'}/>\r\n                    <Search/>\r\n                    <button style={{marginLeft: \"50px\"}} onClick={addNewPackHandler}>Add new pack</button>\r\n                </header>\r\n                <main className={classes.main}>\r\n                    <Table headers={['Name', 'Cards', 'Last Updated', 'Created by', 'Actions']} items={cardPacks}/>\r\n                </main>\r\n                <footer className={classes.footer}>\r\n                    <Pagination page={page}/>\r\n                </footer>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Packs;","import axios from \"axios\";\r\nimport {CardType} from \"../2-bll/cardsReducer\";\r\n\r\ntype CardsResponseType = {\r\n    cards: CardType[]\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    packUserId: string\r\n}\r\nexport type AddCardDataType = {\r\n    cardsPack_id: string\r\n    question?: string\r\n    answer?: string\r\n    grade?: number\r\n    shots?: number\r\n    rating?: number\r\n    answerImg?: string\r\n    questionImg?: string\r\n    questionVideo?: string\r\n    answerVideo?: string\r\n    type?: string\r\n}\r\nexport type RequestAddCardType = {\r\n    card: AddCardDataType\r\n}\r\nexport type UpdateCardDataType = {\r\n    _id: string\r\n    question?: string\r\n    answer?: string\r\n    grade?: number\r\n    shots?: number\r\n    rating?: number\r\n    answerImg?: string\r\n    questionImg?: string\r\n    questionVideo?: string\r\n    answerVideo?: string\r\n    type?: string\r\n    comments?: string\r\n}\r\nexport type RequestUpdateCardType = {\r\n    card: UpdateCardDataType\r\n}\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\nexport const cardsAPI = {\r\n    getCards(id: string) {\r\n        return instance.get<CardsResponseType>(`cards/card?cardsPack_id=${id}`)\r\n    },\r\n    addCard(data: RequestAddCardType) {\r\n        return instance.post(`cards/card`, data)\r\n    },\r\n    deleteCard(id: string) {\r\n        return instance.delete(`cards/card/?id=${id}`)\r\n    },\r\n    updateCard(data: RequestUpdateCardType) {\r\n        return instance.put(`cards/card`, data)\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {AddCardDataType, cardsAPI, RequestAddCardType, RequestUpdateCardType} from \"../3-dal/cardsAPI\";\r\nimport {AppRootStateType} from \"./store\";\r\n\r\ntype InitStateType = typeof initState\r\nexport type CardType = {\r\n    answer: string\r\n    question: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    user_id: string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\ntype FetchCardsType = ReturnType<typeof fetchCards>\r\ntype SetInitType = ReturnType<typeof setInit>\r\ntype ActionsType = FetchCardsType | SetInitType\r\n\r\nconst initState: any = {\r\n    cards: null as CardType[] | null,\r\n    packUserId: null as string | null,\r\n    init: false\r\n}\r\n\r\nexport const cardsReducer = (state: InitStateType = initState, action: ActionsType): InitStateType => {\r\n    switch (action.type) {\r\n        case 'cards/FETCH-CARDS': {\r\n            return {...state, cards: action.cards, packUserId: action.packUserId}\r\n        }\r\n        case 'cards/SET-INIT': {\r\n            return {...state, init: true}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const fetchCards = (cards: Array<CardType>, packUserId: string) => {\r\n    return {type: 'cards/FETCH-CARDS', cards, packUserId} as const\r\n}\r\nexport const setInit = () => {\r\n    return {type: 'cards/SET-INIT'} as const\r\n}\r\n\r\n//thunks\r\nexport const fetchCardsTC = (id: string) => async (dispatch: Dispatch<any, null>) => {\r\n    try {\r\n        const response = await cardsAPI.getCards(id)\r\n        dispatch(fetchCards(response.data.cards, response.data.packUserId))\r\n        console.log(response.data.cards)\r\n    } catch(e) {\r\n        console.log(e)\r\n    } finally {\r\n        dispatch(setInit())\r\n    }\r\n}\r\n\r\nexport const addCardTC = (data: RequestAddCardType) => async (dispatch: Dispatch<any, null>) => {\r\n    try {\r\n        await cardsAPI.addCard(data)\r\n        dispatch(fetchCardsTC(data.card.cardsPack_id))\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const deleteCardTC = (id: string, cardsPack_id: string) => async (dispatch: Dispatch<any, null>, getState: () => AppRootStateType) => {\r\n    try {\r\n        await cardsAPI.deleteCard(id)\r\n        dispatch(fetchCardsTC(cardsPack_id))\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const editCardTC = (data: RequestUpdateCardType, cardsPack_id: string) => async (dispatch: Dispatch<any, null>) => {\r\n    try {\r\n        await cardsAPI.updateCard(data)\r\n        dispatch(fetchCardsTC(cardsPack_id))\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addCardTC, CardType, deleteCardTC, editCardTC, fetchCardsTC} from \"../../1-main/2-bll/cardsReducer\";\r\nimport {AppRootStateType} from \"../../1-main/2-bll/store\";\r\nimport styles from './Cards.module.css'\r\nimport {useParams} from \"react-router-dom\";\r\nimport {AddCardDataType, UpdateCardDataType} from \"../../1-main/3-dal/cardsAPI\";\r\n\r\nexport function Cards() {\r\n    const dispatch = useDispatch()\r\n    const cards = useSelector<AppRootStateType, CardType[]>(state => state.cards.cards)\r\n    const init = useSelector<AppRootStateType, boolean>(state => state.cards.init)\r\n    const loggedUserId = useSelector<AppRootStateType, string>(state => state.auth.userId)\r\n    const packUserId = useSelector<AppRootStateType, string>(state => state.cards.packUserId)\r\n    const {cardsPack_id} = useParams<{ cardsPack_id: string }>()\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchCardsTC(cardsPack_id))\r\n    }, [])\r\n\r\n    const formatDate = (date: string) => {\r\n        let day = date.slice(8, 10)\r\n        let month = date.slice(5, 7)\r\n        let year = date.slice(0, 4)\r\n        return `${day}.${month}.${year}`\r\n    }\r\n\r\n    if (!init) {\r\n        return <div>Loading</div>\r\n    }\r\n\r\n    const addCard = () => {\r\n        let card: AddCardDataType = {\r\n            cardsPack_id: cardsPack_id,\r\n            question: 'what the hell',\r\n            answer: 'dude, have no clue'\r\n        }\r\n        dispatch(addCardTC({card}))\r\n    }\r\n\r\n    const deleteCard = (cardId: string, packId: string) => {\r\n        return () => {\r\n            dispatch(deleteCardTC(cardId, packId))\r\n        }\r\n    }\r\n\r\n    const editCard = (cardId: string, packId: string) => {\r\n        let card: UpdateCardDataType = {\r\n            _id: cardId,\r\n            question: 'Updated question full of confusion',\r\n            answer: 'Updated Answer but simple as hell'\r\n        }\r\n        return () => {\r\n            dispatch(editCardTC({card}, packId))\r\n        }\r\n    }\r\n\r\n    let cardsElements = cards.map(card => {\r\n        return <tr key={card._id}>\r\n            <td>{card.question}</td>\r\n            <td>{card.answer}</td>\r\n            <td>{formatDate(card.updated)}</td>\r\n            <td>{card.grade}</td>\r\n            {loggedUserId === packUserId ? <td>\r\n                <button onClick={deleteCard(card._id, card.cardsPack_id)}>Delete</button>\r\n                <button onClick={editCard(card._id, card.cardsPack_id)}>Edit</button>\r\n            </td> : <td></td>}\r\n        </tr>\r\n    })\r\n\r\n    return (\r\n        <div className={styles.tableContainer}>\r\n            <table className={styles.table}>\r\n                <thead>\r\n                <tr>\r\n                    <th>Question</th>\r\n                    <th>Answer</th>\r\n                    <th>Updated</th>\r\n                    <th>Grade</th>\r\n                    <th>{loggedUserId === packUserId && <button onClick={addCard}>Add</button>}Actions</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {cardsElements}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    )\r\n}","import React from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport Test from '../../../2-features/0-test/Test';\r\nimport Error404 from '../../../2-features/1-auth/2-signUp/sign-up-common/Error404/Error404';\r\nimport Login from '../../../2-features/1-auth/1-login/Login';\r\nimport SignUp from '../../../2-features/1-auth/2-signUp/SignUp';\r\nimport Profile from '../../../2-features/2-profile/Profile';\r\nimport ResetPassword from '../../../2-features/restore/1-resetPassword/ResetPassword';\r\nimport NewPassword from '../../../2-features/restore/2-newPassword/NewPassword';\r\nimport CheckEmail from \"../../../2-features/restore/1-resetPassword/CheckEmail\";\r\nimport Packs from \"../../../2-features/3-packs/Packs\";\r\nimport {Cards} from \"../../../2-features/3-cards/Cards\";\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    SIGN_UP: '/signup',\r\n    PROFILE: '/profile',\r\n    PACKS: '/packs',\r\n    RESET_PASSWORD: '/resetPassword',\r\n    CHECK_EMAIL: '/checkEmail',\r\n    NEW_PASSWORD: '/newPassword/:token',\r\n    CARDS: '/cards/:cardsPack_id',\r\n    TEST: '/test'\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.LOGIN}/>}/>\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.SIGN_UP} render={() => <SignUp/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.PACKS} render={() => <Packs/>}/>\r\n                <Route path={PATH.CARDS} render={() => <Cards/>}/>\r\n                <Route path={PATH.RESET_PASSWORD} render={() => <ResetPassword/>}/>\r\n                <Route path={PATH.CHECK_EMAIL} render={() => <CheckEmail/>}/>\r\n                <Route path={PATH.NEW_PASSWORD} render={() => <NewPassword/>}/>\r\n                <Route path={PATH.TEST} render={() => <Test/>}/>\r\n                <Route render={() => <Error404/>}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport style from './CustomNavLink.module.css'\r\n\r\ntype CustomNavLinkPropsType = {\r\n    title: string,\r\n    to: string\r\n}\r\n\r\nconst CustomNavLink = (props: CustomNavLinkPropsType) => {\r\n    return (\r\n        <div className={style.navLink}>\r\n            <NavLink to={props.to}>{props.title}</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default CustomNavLink;","import React from 'react';\r\nimport style from './Header.module.css'\r\nimport {PATH} from '../routes/Routes';\r\nimport CustomNavLink from '../../../2-features/1-auth/2-signUp/sign-up-common/CustomNavLink/CustomNavLink';\r\nimport SuperButton from '../../../2-features/1-auth/2-signUp/sign-up-common/SuperButton/SuperButton';\r\nimport {useDispatch} from 'react-redux';\r\nimport {logoutSuccess} from '../../2-bll/authReducer';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nfunction Header() {\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logoutSuccess())\r\n    }\r\n\r\n    return (\r\n        <div className={style.header}>\r\n            <CustomNavLink title={'profile'} to={PATH.PROFILE}/>\r\n            <CustomNavLink title={'packs'} to={PATH.PACKS}/>\r\n            <CustomNavLink title={'sign-up'} to={PATH.SIGN_UP}/>\r\n            <CustomNavLink title={'login'} to={PATH.LOGIN}/>\r\n            {/*<CustomNavLink title={'new password'} to={PATH.NEW_PASSWORD}/>*/}\r\n            <CustomNavLink title={'reset password'} to={PATH.RESET_PASSWORD}/>\r\n            <CustomNavLink title={'test'} to={PATH.TEST}/>\r\n            <NavLink to={'/login'}><SuperButton color={\"blue\"} onClick={logoutHandler}>logout</SuperButton></NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport Error404 from '../../../2-features/1-auth/2-signUp/sign-up-common/Error404/Error404';\r\nimport Login from '../../../2-features/1-auth/1-login/Login';\r\nimport SignUp from '../../../2-features/1-auth/2-signUp/SignUp';\r\nimport ResetPassword from '../../../2-features/restore/1-resetPassword/ResetPassword';\r\nimport NewPassword from '../../../2-features/restore/2-newPassword/NewPassword';\r\nimport CheckEmail from \"../../../2-features/restore/1-resetPassword/CheckEmail\";\r\nimport {PATH} from \"./Routes\";\r\n\r\nfunction UnauthorizedRoutes() {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.LOGIN}/>}/>\r\n                <Route path={PATH.SIGN_UP} render={() => <SignUp/>}/>\r\n                <Route path={PATH.RESET_PASSWORD} render={() => <ResetPassword/>}/>\r\n                <Route path={PATH.CHECK_EMAIL} render={() => <CheckEmail/>}/>\r\n                <Route path={PATH.NEW_PASSWORD} render={() => <NewPassword/>}/>\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route render={() => <Error404/>}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UnauthorizedRoutes\r\n","import React from 'react';\r\nimport Header from './header/Header';\r\nimport Routes from './routes/Routes';\r\nimport {AppRootStateType} from '../2-bll/store';\r\nimport {useSelector} from 'react-redux';\r\nimport UnauthorizedRoutes from \"./routes/UnauthorizedRoutes\";\r\n\r\nfunction Main() {\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.auth.isAuth)\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                isAuth\r\n                    ?\r\n                    <div>\r\n                        <Header/>\r\n                        <Routes/>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <UnauthorizedRoutes/>\r\n                    </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","import React, {useEffect} from 'react';\r\nimport './App.module.css';\r\nimport {useDispatch} from 'react-redux';\r\nimport Main from './Main';\r\nimport {getMe} from '../2-bll/authReducer';\r\n\r\n\r\nconst App = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getMe())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Main />\r\n        </div>\r\n    )\r\n}\r\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport {authReducer} from './authReducer';\r\nimport {profileReducer} from './profileReducer';\r\nimport {restoreReducer} from './restoreReducer';\r\nimport {signUpReducer} from \"./signUpReducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {cardsReducer} from \"./cardsReducer\";\r\nimport {packsReducer} from \"./packsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    profile: profileReducer,\r\n    restore: restoreReducer,\r\n    signUp: signUpReducer,\r\n    cards: cardsReducer,\r\n    packs: packsReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n\r\n//@ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './1-main/1-ui/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport {store} from './1-main/2-bll/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <HashRouter>\r\n          <Provider store={store}>\r\n              <App/>\r\n          </Provider>\r\n      </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}