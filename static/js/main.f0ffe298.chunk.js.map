{"version":3,"sources":["2-features/1-auth/1-login/Login.module.css","2-features/restore/Restore.module.css","2-features/1-auth/2-signUp/sign-up-common/SuperInputText/SuperInputText.module.css","2-features/1-auth/2-signUp/SignUp.module.css","2-features/1-auth/2-signUp/sign-up-common/SuperButton/SuperButton.module.css","2-features/1-auth/2-signUp/sign-up-common/Error404/Error404.module.css","2-features/2-profile/Profile.module.css","2-features/1-auth/2-signUp/sign-up-common/SuperCheckbox/SuperCheckbox.module.css","1-main/1-ui/header/Header.module.css","2-features/1-auth/2-signUp/sign-up-common/CustomNavLink/CustomNavLink.module.css","1-main/1-ui/App.module.css","2-features/1-auth/2-signUp/sign-up-common/SuperInputText/SuperInputText.tsx","2-features/1-auth/2-signUp/sign-up-common/SuperButton/SuperButton.tsx","2-features/1-auth/2-signUp/sign-up-common/SuperCheckbox/SuperCheckbox.tsx","2-features/0-test/Test.tsx","2-features/1-auth/2-signUp/sign-up-common/Error404/Error404.tsx","1-main/3-dal/loginAPI.ts","1-main/2-bll/authReducer.ts","2-features/1-auth/1-login/Login.tsx","1-main/3-dal/sign-up-api.ts","1-main/2-bll/signUpReducer.ts","2-features/1-auth/2-signUp/SignUp.tsx","2-features/2-profile/1-ProfileCard/ProfileCard.tsx","2-features/2-profile/THead.tsx","1-main/3-dal/packsAPI.ts","1-main/2-bll/packsReducer.ts","2-features/2-profile/TBody.tsx","2-features/2-profile/Table.tsx","2-features/2-profile/Search.tsx","2-features/2-profile/Header.tsx","2-features/2-profile/Range.tsx","2-features/2-profile/Pagination.tsx","2-features/2-profile/Profile.tsx","1-main/3-dal/restoreAPI.ts","1-main/2-bll/restoreReducer.ts","2-features/restore/1-resetPassword/ResetPassword.tsx","2-features/restore/2-newPassword/NewPassword.tsx","2-features/restore/1-resetPassword/CheckEmail.tsx","2-features/3-packs/Packs.tsx","1-main/1-ui/routes/Routes.tsx","2-features/1-auth/2-signUp/sign-up-common/CustomNavLink/CustomNavLink.tsx","1-main/1-ui/header/Header.tsx","1-main/1-ui/Main.tsx","1-main/1-ui/App.tsx","reportWebVitals.ts","1-main/2-bll/profileReducer.ts","1-main/2-bll/store.ts","index.tsx"],"names":["module","exports","SuperInputText","React","memo","placeholder","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","console","log","finalSpanClassName","s","input","errorInput","superInput","group","required","e","currentTarget","value","key","SuperButton","color","finalClassName","default","SuperCheckbox","onChangeChecked","children","finalInputClassName","checkbox","checked","Test","useState","text","setText","showAlert","alert","setChecked","disabled","onClick","Error404","classes","container","main","fof","instance","axios","create","baseURL","withCredentials","authAPI","email","password","rememberMe","post","delete","initialState","userId","isAuth","isLoggedIn","isLoading","name","avatar","isLoggedInChange","setError","setIsLoading","setAuthUserData","getMe","dispatch","a","res","data","_id","Login","useDispatch","useSelector","state","auth","setEmail","setPassword","setRememberMe","to","style","loginBlock","loginList","loginTitle","loginInput","rememberBlock","PATH","RESET_PASSWORD","forgotLink","activeClassName","forgotLincActive","btnBlock","loginData","then","catch","loginText","SIGN_UP","signUpLink","signUpLinkActive","signUpApi","setSignUpErrorAC","SignUp","signUp","signUpError","confirmPassword","setConfirmPassword","onSignUp","rej","response","signUpTC","signUpContainer","onSubmit","LOGIN","signUpForm","buttonsContainer","ProfileCard","props","profile","image","src","alt","description","THead","listItem","headers","map","h","packsAPI","id","get","cardsPack","packId","put","cardPacks","cardPacksTotalCount","maxCardsCount","minCardsCount","page","pageCount","getPacksTC","TBody","items","item","index","lastUpdated","updated","slice","userName","user_name","cardsCount","btn","deletePackTC","marginLeft","updatePackTC","Table","table","Search","Header","title","Range","setValue","range","min","max","Pagination","pagination","Profile","packs","useEffect","sidebar","content","header","footer","restoreAPI","requestData","restoreEmailSendSuccess","newPasswordSuccess","setReceiverEmailAC","changePasswordSuccessAC","success","ResetPassword","restore","emailAddress","setEmailAddress","CHECK_EMAIL","restoreContainer","restoreForm","preventDefault","requestObj","from","message","NewPassword","token","useParams","changePasswordSuccess","newPassword","setNewPassword","resetPasswordToken","setNewPasswordTC","CheckEmail","emailOfReceiver","Packs","padding","PROFILE","PACKS","NEW_PASSWORD","TEST","Routes","path","exact","render","CustomNavLink","navLink","Main","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0ffe298.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBlock\":\"Login_loginBlock__--uzg\",\"loginList\":\"Login_loginList__1unfP\",\"loginTitle\":\"Login_loginTitle__2XPJ2\",\"loginInput\":\"Login_loginInput__1STqW\",\"rememberBlock\":\"Login_rememberBlock__1fmrK\",\"forgotLink\":\"Login_forgotLink__ho-ZO\",\"forgotLinkActive\":\"Login_forgotLinkActive__1BuvV\",\"btnBlock\":\"Login_btnBlock__f4D2u\",\"loginText\":\"Login_loginText__1mcpT\",\"signUpLink\":\"Login_signUpLink__1F2wY\",\"signUpLinkActive\":\"Login_signUpLinkActive__3Ber0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"restoreContainer\":\"Restore_restoreContainer__pNOwt\",\"restoreForm\":\"Restore_restoreForm__2q58P\",\"error\":\"Restore_error__2vHkR\",\"buttonsContainer\":\"Restore_buttonsContainer__1MLiq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"group\":\"SuperInputText_group__2S800\",\"errorInput\":\"SuperInputText_errorInput__34Qzl\",\"error\":\"SuperInputText_error__jx1Vx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signUpContainer\":\"SignUp_signUpContainer__3gp3q\",\"signUpForm\":\"SignUp_signUpForm__17AjK\",\"error\":\"SignUp_error__2gvSH\",\"buttonsContainer\":\"SignUp_buttonsContainer__Thwab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__h-veD\",\"white\":\"SuperButton_white__3peMs\",\"blue\":\"SuperButton_blue__5JLOT\",\"red\":\"SuperButton_red__gbQyz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Error404_container__3qUyK\",\"main\":\"Error404_main__2H8Cg\",\"fof\":\"Error404_fof__27oWq\",\"type\":\"Error404_type__36aHc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Profile_page__1ig7T\",\"sidebar\":\"Profile_sidebar__3FVKA\",\"profile\":\"Profile_profile__1ckON\",\"image\":\"Profile_image__3RvGR\",\"name\":\"Profile_name__vWPKS\",\"description\":\"Profile_description__2M_zJ\",\"range\":\"Profile_range__3tOIG\",\"content\":\"Profile_content__2FNVr\",\"header\":\"Profile_header__ykEE7\",\"main\":\"Profile_main__1Dgqn\",\"listItem\":\"Profile_listItem__2adLH\",\"table\":\"Profile_table__3AEAh\",\"btn\":\"Profile_btn__2S_sp\",\"footer\":\"Profile_footer__3sIyv\",\"pagination\":\"Profile_pagination___DVmq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1ar1v\",\"spanClassName\":\"SuperCheckbox_spanClassName__25qhW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2AAZ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"CustomNavLink_navLink__1zMvl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__iX4cl\"};","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    type?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = React.memo((\r\n    {\r\n        placeholder, type,\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    console.log(placeholder)\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}`\r\n\r\n    return (\r\n        <div className={s.group}>\r\n            <input\r\n                type={type}\r\n                required\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                // className={finalInputClassName}\r\n                // placeholder={placeholder}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            <label>{placeholder}</label>\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n    color?: 'white' | 'blue' | 'red'\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = React.memo((\r\n    {\r\n        color, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${color ? s[color] : s.default} ${s.default}`\r\n    console.log('SB')\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n})\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport SuperInputText from \"../1-auth/2-signUp/sign-up-common/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../1-auth/2-signUp/sign-up-common/SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../1-auth/2-signUp/sign-up-common/SuperCheckbox/SuperCheckbox\";\r\n\r\n\r\nconst Test = () => {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text)\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n    return (\r\n        <div>\r\n            <h1>test</h1>\r\n            <SuperInputText\r\n                value={text}\r\n                onChangeText={setText}\r\n                onEnter={showAlert}\r\n                error={error}\r\n                // spanClassName={s.testSpanError}\r\n            />\r\n            <SuperButton>\r\n                default\r\n            </SuperButton>\r\n\r\n            <SuperButton disabled>\r\n                disabled\r\n            </SuperButton>\r\n\r\n            <SuperButton\r\n                // red // пропсу с булевым значением не обязательно указывать true\r\n                onClick={showAlert}\r\n            >\r\n                delete {/*// название кнопки попадёт в children*/}\r\n            </SuperButton>\r\n\r\n            <SuperCheckbox\r\n                checked={checked}\r\n                onChangeChecked={setChecked}\r\n            >\r\n                some text\r\n            </SuperCheckbox>\r\n\r\n\r\n            <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Test;","import React from 'react'\r\nimport classes from './Error404.module.css'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={classes.container}>\r\n            <div className={classes.main}>\r\n                <div className={classes.fof}>\r\n                    <h1>Error 404</h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true,\r\n})\r\n\r\nexport const authAPI = {\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<LoginResponseType>('auth/login', {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete<InfoResponseType>('auth/me')\r\n    },\r\n    me() {\r\n        return instance.post<ResponseType>('auth/me', {})\r\n    },\r\n}\r\n\r\n// types\r\nexport type LoginResponseType = {\r\n    avatar: string,\r\n    created: string,\r\n    deviceTokens: DeviceTokenType [],\r\n    email: string,\r\n    isAdmin: boolean,\r\n    name: string,\r\n    publicCardPacksCount: number,\r\n    rememberMe: boolean,\r\n    token: string,\r\n    tokenDeathTime: number,\r\n    updated: string,\r\n    verified: boolean,\r\n    __v: number,\r\n    _id: string,\r\n}\r\ntype DeviceTokenType = {\r\n    _id: string,\r\n    device: string,\r\n}\r\nexport type InfoResponseType = {\r\n    info: string,\r\n    error?: string\r\n}\r\nexport type ResponseType = UserType & {\r\n    created: string,\r\n    deviceTokens?: DeviceTokenType [],\r\n    isAdmin: boolean,\r\n    rememberMe: boolean,\r\n    token: string,\r\n    tokenDeathTime: number,\r\n    updated: string,\r\n    verified: boolean,\r\n    error?: string,\r\n}\r\nexport type UserType = {\r\n    _id: string,\r\n    email: string,\r\n    name: string,\r\n    avatar: string,\r\n    publicCardPacksCount: number,\r\n}","import {authAPI} from '../3-dal/loginAPI';\r\nimport {Dispatch} from 'redux';\r\n\r\n\r\nconst initialState = {\r\n    userId: '',\r\n    email: '',\r\n    isAuth: false,\r\n    isLoggedIn: false,\r\n    error: '',\r\n    isLoading: false,\r\n    name: '' as string | undefined,\r\n    avatar: '' as string | undefined,\r\n}\r\n\r\nexport const authReducer = (state = initialState, action: ActionsType): typeof initialState => {\r\n    switch (action.type) {\r\n        case \"IS-LOGGED-IN-CHANGE\": {\r\n            return {\r\n                ...state, isLoggedIn: action.isLoggedIn\r\n            }\r\n        }\r\n        case \"SET-ERROR\": {\r\n            return {\r\n                ...state, error: action.error\r\n            }\r\n        }\r\n        case \"SET-IS-LOADING\": {\r\n            return {\r\n                ...state, isLoading: action.isLoading\r\n            }\r\n        }\r\n        case \"SET-AUTH-USER-DATA\": {\r\n            return {\r\n                ...state,\r\n                userId: action.userId,\r\n                email: action.email,\r\n                isAuth: action.isAuth,\r\n                name: action.name,\r\n                avatar: action.avatar,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//AC\r\nexport const isLoggedInChange = (isLoggedIn: boolean) => ({type: 'IS-LOGGED-IN-CHANGE', isLoggedIn}) as const\r\nexport const setError = (error: string) => ({type: 'SET-ERROR', error}) as const\r\nexport const setIsLoading = (isLoading: boolean) => ({type: 'SET-IS-LOADING', isLoading}) as const\r\nexport const setAuthUserData = (userId: string, email: string, isAuth: boolean, name?: string, avatar?: string) => ({\r\n    type: 'SET-AUTH-USER-DATA',\r\n    userId: userId,\r\n    email: email,\r\n    isAuth: isAuth,\r\n    name: name,\r\n    avatar: avatar,\r\n}) as const\r\n\r\n//Thunks\r\nexport const loginSuccess = (loginData: LoginDataType) => (dispatch: Dispatch<ActionsType, null>) => {\r\n    dispatch(setIsLoading(true))\r\n    authAPI.login(loginData.email, loginData.password, loginData.rememberMe)\r\n        .then(() => {\r\n            dispatch(isLoggedInChange(true))\r\n            dispatch(setIsLoading(false))\r\n            dispatch(getMe())\r\n            dispatch(setError(''))\r\n        })\r\n        .catch(() => {\r\n            dispatch(isLoggedInChange(false))\r\n            dispatch(setIsLoading(false))\r\n        })\r\n}\r\nexport const logoutSuccess = () => (dispatch: Dispatch<ActionsType, null>) => {\r\n    authAPI.logout()\r\n        .then(() => {\r\n            dispatch(setAuthUserData('', '', false))\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setError(error.response.data.error))\r\n        })\r\n}\r\nexport const getMe = () => {\r\n    return async (dispatch: any) => {\r\n        const res = await authAPI.me()\r\n        let {_id, email, name, avatar} = res.data\r\n        dispatch(setAuthUserData(_id, email, true, name, avatar))\r\n    }\r\n}\r\n// types\r\ntype ActionsType = ReturnType<typeof isLoggedInChange>\r\n    | ReturnType<typeof setError>\r\n    | ReturnType<typeof setIsLoading>\r\n    | ReturnType<typeof setAuthUserData>\r\n\r\ntype LoginDataType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean,\r\n}\r\n\r\n\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport {PATH} from '../../../1-main/1-ui/routes/Routes';\r\nimport style from './Login.module.css'\r\nimport {loginSuccess} from '../../../1-main/2-bll/authReducer';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../1-main/2-bll/store';\r\nimport SuperCheckbox from '../2-signUp/sign-up-common/SuperCheckbox/SuperCheckbox';\r\nimport SuperButton from '../2-signUp/sign-up-common/SuperButton/SuperButton';\r\nimport SuperInputText from '../2-signUp/sign-up-common/SuperInputText/SuperInputText';\r\n\r\n\r\nfunction Login() {\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.auth.isAuth)\r\n    const error = useSelector<AppRootStateType, string>(state => state.auth.error)\r\n    const isLoading = useSelector<AppRootStateType, boolean>(state => state.auth.isLoading)\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [rememberMe, setRememberMe] = useState(false)\r\n\r\n    const emailHandler = (e: ChangeEvent<HTMLInputElement>) => setEmail(e.currentTarget.value)\r\n    const passwordHandler = (e: ChangeEvent<HTMLInputElement>) => setPassword(e.currentTarget.value)\r\n    const rememberMeHandler = () => setRememberMe(!rememberMe)\r\n    const loginHandler = () => {\r\n        dispatch(loginSuccess({email, password, rememberMe}))\r\n    }\r\n    if(isAuth){\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n    return (\r\n        <div className={style.loginBlock}>\r\n            <div className={style.loginList}>\r\n                <h1 className={style.loginTitle}>Login</h1>\r\n                {isLoading ? <div style={{color: 'green'}}>Loading...</div> : ''}\r\n                <SuperInputText className={style.loginInput} placeholder={'Email'} value={email} onChange={emailHandler}/>\r\n                <SuperInputText className={style.loginInput} placeholder={'Password'} value={password} onChange={passwordHandler}/>\r\n                <div className={style.rememberBlock}>\r\n                    <SuperCheckbox checked={rememberMe} onClick={rememberMeHandler}>Remember me</SuperCheckbox>\r\n                    <NavLink to={PATH.RESET_PASSWORD} className={style.forgotLink} activeClassName={style.forgotLincActive}>Forgot password</NavLink>\r\n                </div>\r\n                <div className={style.btnBlock}>\r\n                    <SuperButton color={'blue'} onClick={loginHandler}>Login</SuperButton>\r\n                    <div className={style.loginText}>Don't have an account?</div>\r\n                    <NavLink to={PATH.SIGN_UP} className={style.signUpLink} activeClassName={style.signUpLinkActive}>Sign Up</NavLink>\r\n\r\n                </div>\r\n                {error ? <div style={{color: 'red'}}>{error}</div> : ''}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n})\r\n\r\n// api\r\nexport const signUpApi = {\r\n    createNewAccount(email: string, password: string) {\r\n        return instance.post('auth/register', {email, password});\r\n    }\r\n}\r\n\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {signUpApi} from \"../3-dal/sign-up-api\";\r\n\r\ntype initialStateType = {\r\n    isLoggedIn: boolean\r\n    error: null | string\r\n}\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    error: '',\r\n}\r\n\r\nexport const signUpReducer = (state: initialStateType = initialState, action: ActionsType):initialStateType => {\r\n    switch (action.type) {\r\n        case \"SET-IS_LOGGED_IN\":\r\n            return {...state, isLoggedIn: action.value}\r\n        case \"SET-ERROR\":\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setIsLoggedInAC = (value: boolean) => {\r\n    return {type: 'SET-IS_LOGGED_IN', value} as const\r\n}\r\nexport const setSignUpErrorAC = (error: string) => {\r\n    return {type: 'SET-ERROR', error} as const\r\n}\r\n\r\n\r\nexport const signUpTC = (email: string, password: string) => (dispatch: Dispatch<ActionsType, ActionsType>) => {\r\n    signUpApi.createNewAccount(email, password)\r\n        .then(res => {\r\n            dispatch(setIsLoggedInAC(true))\r\n        })\r\n        .catch(rej=>{\r\n            dispatch(setSignUpErrorAC(rej.response.data.error))\r\n        })\r\n}\r\n\r\nexport type SetIsLoggedInActionType = ReturnType<typeof setIsLoggedInAC>\r\nexport type SetSignUpErrorACActionType = ReturnType<typeof setSignUpErrorAC>\r\n\r\ntype ActionsType = SetIsLoggedInActionType | SetSignUpErrorACActionType","import React, {useState} from 'react';\r\nimport SuperButton from \"./sign-up-common/SuperButton/SuperButton\";\r\nimport SuperInputText from \"./sign-up-common/SuperInputText/SuperInputText\";\r\nimport style from './SignUp.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setSignUpErrorAC, signUpTC} from \"../../../1-main/2-bll/signUpReducer\";\r\nimport {AppRootStateType} from \"../../../1-main/2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../../1-main/1-ui/routes/Routes\";\r\n\r\nfunction SignUp() {\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppRootStateType>((state) => state.signUp.isLoggedIn)\r\n    const signUpError = useSelector<AppRootStateType, string | null>(state => state.signUp.error)\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [confirmPassword, setConfirmPassword] = useState<string>('')\r\n\r\n    const onSignUp = () => {\r\n        password === confirmPassword\r\n            ? dispatch(signUpTC(email, password))\r\n            : dispatch(setSignUpErrorAC('Password mismatch'))\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        onSignUp()\r\n    }\r\n    const onCancel = () => {\r\n        setEmail('')\r\n        setPassword('')\r\n        setConfirmPassword('')\r\n        dispatch(setSignUpErrorAC(''))\r\n    }\r\n\r\n    return (\r\n        <div className={style.signUpContainer} onSubmit={handleSubmit}>\r\n            {isLoggedIn && <Redirect to={PATH.LOGIN}/>}\r\n            <form className={style.signUpForm}>\r\n                <div>\r\n                    <h3>Create a new account</h3>\r\n                    {signUpError && <span className={style.error}>{signUpError}</span>}\r\n                </div>\r\n                <div>\r\n                    <SuperInputText\r\n                        value={email}\r\n                        onChangeText={setEmail}\r\n                        onEnter={onSignUp}\r\n                        type={'text'}\r\n                        placeholder={'Email'}\r\n                    />\r\n                    <SuperInputText\r\n                        value={password}\r\n                        onChangeText={setPassword}\r\n                        onEnter={onSignUp}\r\n                        type={'Password'}\r\n                        placeholder={'Password'}\r\n                    />\r\n                    <SuperInputText\r\n                        value={confirmPassword}\r\n                        onChangeText={setConfirmPassword}\r\n                        onEnter={onSignUp}\r\n                        type={'Password'}\r\n                        placeholder={'Confirm Password'}\r\n                    />\r\n                </div>\r\n                <div className={style.buttonsContainer}>\r\n                    <SuperButton type={'button'} onClick={onCancel} color={'white'}>Cancel</SuperButton>\r\n                    <SuperButton type={'submit'} color={'blue'}>Register</SuperButton>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignUp;\r\n","import classes from \"../Profile.module.css\";\r\nimport React from \"react\";\r\n\r\ntype ProfileCardPropsType = {\r\n    name: string | undefined\r\n    avatar: string | undefined\r\n}\r\n\r\nexport function ProfileCard(props: ProfileCardPropsType) {\r\n    const avatar = props.avatar ? props.avatar : 'https://thumbs.dreamstime.com/b/happy-smiling-geek-hipster-beard-man-cool-avatar-geek-man-avatar-104871313.jpg'\r\n    return (\r\n        <div className={classes.profile}>\r\n            <div className={classes.image}><img src={avatar} alt=\"User\"/></div>\r\n            <div className={classes.name}>{props.name}</div>\r\n            <div className={classes.description}>{'Front-end developer'}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import classes from \"./Profile.module.css\";\r\nimport React from \"react\";\r\nimport {EntityListType} from \"./Profile\";\r\n\r\ntype ListHeaderPropsType = {\r\n    headers: EntityListType\r\n}\r\n\r\nexport function THead(props: ListHeaderPropsType) {\r\n    return (\r\n        <tr className={classes.listItem}>\r\n            {props.headers.map(h => <th>{h}</th>)}\r\n        </tr>\r\n    )\r\n}","import axios from 'axios';\r\nimport {CardPacksType} from \"../2-bll/packsReducer\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\nexport const packsAPI = {\r\n    getPacks(userId?: string) {\r\n        const id = userId ? `&user_id=${userId}` : ''\r\n        return instance.get<GetPacksResponseType>(`cards/pack?pageCount=8${id}`)\r\n    },\r\n    addPack() {\r\n        return instance.post<GetPacksResponseType>('cards/pack', {cardsPack: {name: 'English pack'}})\r\n    },\r\n    deletePack(packId: string) {\r\n        return instance.delete<GetPacksResponseType>(`cards/pack?id=${packId}`)\r\n    },\r\n    updatePack(packId: string) {\r\n        return instance.put<GetPacksResponseType>(`cards/pack`, {\r\n            cardsPack: {\r\n                _id: packId,\r\n                name: 'German pack'\r\n            }\r\n        })\r\n    },\r\n}\r\n\r\n// types\r\nexport type GetPacksResponseType = {\r\n    cardPacks: Array<CardPacksType>\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n}","import {Dispatch} from 'redux';\r\nimport {GetPacksResponseType, packsAPI} from \"../3-dal/packsAPI\";\r\n\r\n\r\nconst initialState: initialStateType = {\r\n    cardPacks: [],\r\n    cardPacksTotalCount: null,\r\n    maxCardsCount: null,\r\n    minCardsCount: null,\r\n    page: null,\r\n    pageCount: null,\r\n}\r\n\r\nexport const packsReducer = (state: initialStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"SET-PACKS\": {\r\n            return {\r\n                ...state,\r\n                cardPacks: [...action.data.cardPacks],\r\n                cardPacksTotalCount: action.data.cardPacksTotalCount,\r\n                maxCardsCount: action.data.maxCardsCount,\r\n                minCardsCount: action.data.minCardsCount,\r\n                page: action.data.page,\r\n                pageCount: action.data.pageCount,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setPacksAC = (data: GetPacksResponseType) => ({type: 'SET-PACKS', data} as const)\r\n\r\n\r\n// thunks\r\nexport const getPacksTC = (userId?: string) => (dispatch: Dispatch<ActionsType, null>) => {\r\n    packsAPI.getPacks(userId)\r\n        .then((res) => {\r\n            dispatch(setPacksAC(res.data))\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n}\r\nexport const addPackTC = () => (dispatch: Dispatch<ActionsType, null>) => {\r\n    packsAPI.addPack()\r\n        .then(() => {\r\n            dispatch(getPacksTC())\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n}\r\nexport const deletePackTC = (packId: string) => (dispatch: Dispatch<ActionsType, null>) => {\r\n    packsAPI.deletePack(packId)\r\n        .then(() => {\r\n            dispatch(getPacksTC())\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n}\r\nexport const updatePackTC = (packId: string) => (dispatch: Dispatch<ActionsType, null>) => {\r\n    packsAPI.updatePack(packId)\r\n        .then(() => {\r\n            dispatch(getPacksTC())\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n}\r\n\r\n// types\r\nexport type CardPacksType = {\r\n    cardsCount: number\r\n    created: string\r\n    more_id: string\r\n    name: string\r\n    private: boolean\r\n    updated: string\r\n    user_id: string\r\n    user_name: string\r\n    _id: string\r\n}\r\ntype initialStateType = {\r\n    cardPacks: Array<CardPacksType>\r\n    cardPacksTotalCount: number | null\r\n    maxCardsCount: number | null\r\n    minCardsCount: number | null\r\n    page: number | null\r\n    pageCount: number | null\r\n}\r\n\r\ntype ActionsType = SetPacksActionType\r\n\r\ntype SetPacksActionType = ReturnType<typeof setPacksAC>\r\n\r\n\r\n","import classes from \"./Profile.module.css\";\r\nimport React from \"react\";\r\nimport {CardPacksType, deletePackTC, updatePackTC} from \"../../1-main/2-bll/packsReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\ntype ListItemPropsType = {\r\n    items: Array<CardPacksType>\r\n}\r\n\r\n\r\nexport function TBody(props: ListItemPropsType) {\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <>\r\n            {\r\n                props.items.map((item, index) => {\r\n                    const lastUpdated = item.updated.slice(0, 10)\r\n                    const userName = item.user_name.slice(0, 30)\r\n                    const packId = item._id\r\n\r\n                    const deletePackHandler = () => {\r\n                        dispatch(deletePackTC(packId))\r\n                    }\r\n                    const editPackHandler = () => {\r\n                        dispatch(updatePackTC(packId))\r\n                    }\r\n\r\n                    return <tr className={classes.listItem} key={index}>\r\n                        <td>{item.name}</td>\r\n                        <td>{item.cardsCount}</td>\r\n                        <td>{lastUpdated}</td>\r\n                        <td>{userName}</td>\r\n                        <td>\r\n                            <button className={classes.btn} onClick={deletePackHandler}>{'Delete'}</button>\r\n                            <button style={{marginLeft: \"10px\"}} className={classes.btn}\r\n                                    onClick={editPackHandler}>{'Edit'}</button>\r\n                        </td>\r\n                    </tr>\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport {THead} from \"./THead\";\r\nimport {TBody} from \"./TBody\";\r\nimport {EntityListType, ItemsListType} from \"./Profile\";\r\nimport classes from \"./Profile.module.css\";\r\nimport {CardPacksType} from \"../../1-main/2-bll/packsReducer\";\r\n\r\ntype ListPropsType = {\r\n    headers: EntityListType\r\n    items: Array<CardPacksType>\r\n}\r\n\r\nexport function Table(props: ListPropsType) {\r\n    return (\r\n        <table className={classes.table}>\r\n            <THead headers={props.headers}/>\r\n            <TBody items={props.items}/>\r\n        </table>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport function Search() {\r\n    return <input type=\"search\" placeholder=\"Search...\"/>\r\n}","import React from \"react\";\r\n\r\ntype HeaderPropsType = {\r\n    title: string\r\n}\r\n\r\nexport function Header(props: HeaderPropsType) {\r\n    return <h1>{props.title}</h1>\r\n}","import classes from \"./Profile.module.css\";\r\nimport React, {useState} from \"react\";\r\n\r\nexport function Range() {\r\n    const [value, setValue] = useState(50)\r\n    return (\r\n        <div className={classes.range}>\r\n            <div>Number of cards</div>\r\n            <div><span>{value}</span></div>\r\n            <input type=\"range\" name=\"range\" min=\"0\" max=\"100\" value={value} onChange={e => setValue(+e.currentTarget.value)}/>\r\n        </div>\r\n    )\r\n}","import classes from \"./Profile.module.css\";\r\nimport React from \"react\";\r\n\r\ntype PaginationPropsType = {\r\n    page: number | null\r\n}\r\n\r\nexport function Pagination(props: PaginationPropsType) {\r\n\r\n    return (\r\n        <>\r\n            {<span className={classes.pagination}>{props.page}</span>}\r\n        </>\r\n    )\r\n}","import React, {useEffect} from 'react';\r\nimport classes from './Profile.module.css';\r\nimport {ProfileCard} from \"./1-ProfileCard/ProfileCard\";\r\nimport {Table} from \"./Table\";\r\nimport {Search} from \"./Search\";\r\nimport {Header} from \"./Header\";\r\nimport {Range} from \"./Range\";\r\nimport {Pagination} from \"./Pagination\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../1-main/2-bll/store\";\r\nimport {CardPacksType, getPacksTC} from \"../../1-main/2-bll/packsReducer\";\r\n\r\n\r\nfunction Profile() {\r\n    const name = useSelector<AppRootStateType, string | undefined>(state => state.auth.name)\r\n    const avatar = useSelector<AppRootStateType, string | undefined>(state => state.auth.avatar)\r\n    const cardPacks = useSelector<AppRootStateType, Array<CardPacksType>>(state => state.packs.cardPacks)\r\n    const page = useSelector<AppRootStateType, number | null>(state => state.packs.page)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getPacksTC())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className={classes.page}>\r\n            <aside className={classes.sidebar}>\r\n                <ProfileCard name={name} avatar={avatar}/>\r\n                <Range/>\r\n            </aside>\r\n            <div className={classes.content}>\r\n                <header className={classes.header}>\r\n                    <Header title={`Packs list ${name}`}/>\r\n                    <Search/>\r\n                </header>\r\n                <main className={classes.main}>\r\n                    <Table headers={['Name', 'Cards', 'Last Updated', 'Created by', 'Actions']} items={cardPacks}/>\r\n                </main>\r\n                <footer className={classes.footer}>\r\n                    <Pagination page={page}/>\r\n                </footer>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n// Types\r\nexport type EntityListType = Array<string>\r\nexport type ItemsListType = {\r\n    [key: string]: string\r\n}\r\n\r\n\r\nexport default Profile;\r\n","import axios from \"axios\";\r\n\r\nexport type ForgotRequestType = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n}\r\n\r\nexport type ForgotResponseType = {\r\n    info: string\r\n    success: boolean\r\n    answer: boolean\r\n    html: boolean\r\n}\r\n\r\nexport type SetNewPasswordRequestType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\nexport const restoreAPI = {\r\n    forgotPassword(requestData: ForgotRequestType) {\r\n        return instance.post<ForgotResponseType>(`auth/forgot`, requestData)\r\n    },\r\n    setNewPassword(requestData: SetNewPasswordRequestType) {\r\n        return instance.post(`auth/set-new-password`, requestData)\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {ForgotRequestType, restoreAPI, SetNewPasswordRequestType} from \"../3-dal/restoreAPI\";\r\n\r\ntype InitStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    email: null as string | null,\r\n    restoreEmailSendSuccess: false,\r\n    newPasswordSuccess: false\r\n}\r\n\r\nexport const restoreReducer = (state: InitStateType = initialState, action: UnionRestoreAT) => {\r\n    switch (action.type) {\r\n        case \"restore/SET-RECEIVER-EMAIL\": {\r\n            return {...state, email: action.email}\r\n        }\r\n        case \"restore/EMAIL-SEND-SUCCESS\": {\r\n            return {...state, restoreEmailSendSuccess: action.success}\r\n        }\r\n        case \"restore/CHANGE-PASSWORD-SUCCESS\":\r\n            return {...state, newPasswordSuccess: action.success}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst recoveryMessage = `<div style=\"padding: 15px\">Password recovery link: <a href=\"https://ffiillaattoovv.github.io/flashcards#/newPassword/$token$\">click here</a></div>`\r\nconst recoveryMessageAddressFrom = `NEKO ADMIN <ai73a@yandex.by>`\r\n//actions\r\nexport const setReceiverEmailAC = (email: string) => {\r\n    return {type: 'restore/SET-RECEIVER-EMAIL', email} as const\r\n}\r\nexport const emailSendSuccessAC = (success: boolean) => {\r\n    return {type: 'restore/EMAIL-SEND-SUCCESS', success} as const\r\n}\r\nexport const changePasswordSuccessAC = (success: boolean) => {\r\n    return {type: 'restore/CHANGE-PASSWORD-SUCCESS', success} as const\r\n}\r\n//thunks\r\nexport const forgotPasswordTC = (email: string) => async (dispatch: Dispatch<UnionRestoreAT, null>) => {\r\n    try {\r\n        let requestObj: ForgotRequestType = {\r\n            email: email,\r\n            from: recoveryMessageAddressFrom,\r\n            message: recoveryMessage\r\n        }\r\n        const response = await restoreAPI.forgotPassword(requestObj)\r\n        dispatch(setReceiverEmailAC(email))\r\n        dispatch(emailSendSuccessAC(response.data.success))\r\n        dispatch(changePasswordSuccessAC(false))\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const setNewPasswordTC = (password: string, token: string) => async (dispatch: Dispatch<UnionRestoreAT, null>) => {\r\n    try {\r\n        let requestObj: SetNewPasswordRequestType = {\r\n            password: password,\r\n            resetPasswordToken: token\r\n        }\r\n        await restoreAPI.setNewPassword(requestObj)\r\n        dispatch(changePasswordSuccessAC(true))\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\n//action types\r\nexport type UnionRestoreAT = SetReceiverEmailAT | EmailSendSuccessACAT | ChangePasswordSuccessAT\r\ntype SetReceiverEmailAT = ReturnType<typeof setReceiverEmailAC>\r\ntype EmailSendSuccessACAT = ReturnType<typeof emailSendSuccessAC>\r\ntype ChangePasswordSuccessAT = ReturnType<typeof changePasswordSuccessAC>","import React, {ChangeEvent, useState, MouseEvent} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {forgotPasswordTC} from \"../../../1-main/2-bll/restoreReducer\";\r\nimport {AppRootStateType} from \"../../../1-main/2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../../1-main/1-ui/routes/Routes\";\r\nimport style from '../Restore.module.css';\r\nimport SuperInputText from \"../../1-auth/2-signUp/sign-up-common/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../1-auth/2-signUp/sign-up-common/SuperButton/SuperButton\";\r\n\r\nfunction ResetPassword() {\r\n\r\n    const dispatch = useDispatch()\r\n    const restoreEmailSendSuccess = useSelector<AppRootStateType, boolean>(state => state.restore.restoreEmailSendSuccess)\r\n\r\n    const [emailAddress, setEmailAddress] = useState('')\r\n\r\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmailAddress(e.currentTarget.value)\r\n    }\r\n\r\n    const submitEmail = (e: MouseEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        dispatch(forgotPasswordTC(emailAddress))\r\n    }\r\n\r\n    if (restoreEmailSendSuccess) {\r\n        return <Redirect to={PATH.CHECK_EMAIL}/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.restoreContainer}>\r\n            <form className={style.restoreForm} onSubmit={submitEmail}>\r\n                <div>\r\n                    <h3>Forgot your password?</h3>\r\n                </div>\r\n                <div>\r\n                    <SuperInputText\r\n                        value={emailAddress}\r\n                        onChange={onChangeEmail}\r\n                        type={'text'}\r\n                        placeholder={'Email'}\r\n                    />\r\n                </div>\r\n                <div className={style.buttonsContainer}>\r\n                    <SuperButton type={'submit'} color={'blue'}>Send instructions</SuperButton>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResetPassword;\r\n","import React, {ChangeEvent, useState, MouseEvent} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../1-main/2-bll/store\";\r\nimport {setNewPasswordTC} from \"../../../1-main/2-bll/restoreReducer\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport {PATH} from \"../../../1-main/1-ui/routes/Routes\";\r\nimport style from \"../Restore.module.css\";\r\nimport SuperInputText from \"../../1-auth/2-signUp/sign-up-common/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../1-auth/2-signUp/sign-up-common/SuperButton/SuperButton\";\r\n\r\nfunction NewPassword() {\r\n\r\n    const dispatch = useDispatch()\r\n    const {token} = useParams<{ token: string }>()\r\n    const changePasswordSuccess = useSelector<AppRootStateType, boolean>(state => state.restore.newPasswordSuccess)\r\n\r\n    const [newPassword, setNewPassword] = useState('')\r\n\r\n    const onChangeNewPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewPassword(e.currentTarget.value)\r\n    }\r\n\r\n    const submitNewPassword = (e: MouseEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        dispatch(setNewPasswordTC(newPassword, token))\r\n    }\r\n\r\n    if (changePasswordSuccess) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.restoreContainer}>\r\n            <form className={style.restoreForm} onSubmit={submitNewPassword}>\r\n                <div>\r\n                    <h3>Create new password</h3>\r\n                </div>\r\n                <div>\r\n                    <SuperInputText\r\n                        value={newPassword}\r\n                        onChange={onChangeNewPassword}\r\n                        type={'password'}\r\n                        placeholder={'New password'}\r\n                    />\r\n                </div>\r\n                <p>Create new password and log in with it afterwards</p>\r\n                <div className={style.buttonsContainer}>\r\n                    <SuperButton type={'submit'} color={'blue'}>Create new password</SuperButton>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewPassword;\r\n","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../1-main/2-bll/store\";\r\nimport style from '../Restore.module.css';\r\n\r\nfunction CheckEmail() {\r\n\r\n    const emailOfReceiver = useSelector<AppRootStateType, string | null>(state => state.restore.email)\r\n\r\n    return (\r\n        <div className={style.restoreContainer}>\r\n            <div className={style.restoreForm}>\r\n                <h3>Check Email</h3>\r\n                <img src=\"\" alt=\"letter img\"/>\r\n                <p>We've sent an Email with instructions to {emailOfReceiver}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckEmail;\r\n","import React, {useEffect} from 'react';\r\nimport classes from \"../2-profile/Profile.module.css\";\r\nimport {Range} from \"../2-profile/Range\";\r\nimport {Header} from \"../2-profile/Header\";\r\nimport {Search} from \"../2-profile/Search\";\r\nimport {Table} from \"../2-profile/Table\";\r\nimport {Pagination} from \"../2-profile/Pagination\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../1-main/2-bll/store\";\r\nimport {addPackTC, CardPacksType, getPacksTC} from \"../../1-main/2-bll/packsReducer\";\r\n\r\n\r\nconst Packs = () => {\r\n    const page = useSelector<AppRootStateType, number | null>(state => state.packs.page)\r\n    const cardPacks = useSelector<AppRootStateType, Array<CardPacksType>>(state => state.packs.cardPacks)\r\n    const userId = useSelector<AppRootStateType, string>(state => state.auth.userId)\r\n    const dispatch = useDispatch()\r\n\r\n    const addNewPackHandler = () => {\r\n        dispatch(addPackTC())\r\n    }\r\n    const getMyPacksHandler = () => {\r\n        dispatch(getPacksTC(userId))\r\n    }\r\n    const getAllPacksHandler = () => {\r\n        dispatch(getPacksTC())\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getPacksTC())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className={classes.page}>\r\n            <aside className={classes.sidebar}>\r\n                <div className={classes.profile}>\r\n                    <div style={{padding: \"80px\"}}>\r\n                        <button onClick={getMyPacksHandler}>My</button>\r\n                        <button onClick={getAllPacksHandler}>All</button>\r\n                    </div>\r\n                </div>\r\n                <Range/>\r\n            </aside>\r\n            <div className={classes.content}>\r\n                <header className={classes.header}>\r\n                    <Header title={'Packs list'}/>\r\n                    <Search/>\r\n                    <button style={{marginLeft: \"50px\"}} onClick={addNewPackHandler}>Add new pack</button>\r\n                </header>\r\n                <main className={classes.main}>\r\n                    <Table headers={['Name', 'Cards', 'Last Updated', 'Created by', 'Actions']} items={cardPacks}/>\r\n                </main>\r\n                <footer className={classes.footer}>\r\n                    <Pagination page={page}/>\r\n                </footer>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Packs;","import React from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport Test from '../../../2-features/0-test/Test';\r\nimport Error404 from '../../../2-features/1-auth/2-signUp/sign-up-common/Error404/Error404';\r\nimport Login from '../../../2-features/1-auth/1-login/Login';\r\nimport SignUp from '../../../2-features/1-auth/2-signUp/SignUp';\r\nimport Profile from '../../../2-features/2-profile/Profile';\r\nimport ResetPassword from '../../../2-features/restore/1-resetPassword/ResetPassword';\r\nimport NewPassword from '../../../2-features/restore/2-newPassword/NewPassword';\r\nimport CheckEmail from \"../../../2-features/restore/1-resetPassword/CheckEmail\";\r\nimport Packs from \"../../../2-features/3-packs/Packs\";\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    SIGN_UP: '/signup',\r\n    PROFILE: '/profile',\r\n    PACKS: '/packs',\r\n    RESET_PASSWORD: '/resetPassword',\r\n    CHECK_EMAIL: '/checkEmail',\r\n    NEW_PASSWORD: '/newPassword/:token',\r\n    TEST: '/test'\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.LOGIN}/>}/>\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.SIGN_UP} render={() => <SignUp/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.PACKS} render={() => <Packs/>}/>\r\n                <Route path={PATH.RESET_PASSWORD} render={() => <ResetPassword/>}/>\r\n                <Route path={PATH.CHECK_EMAIL} render={() => <CheckEmail/>}/>\r\n                <Route path={PATH.NEW_PASSWORD} render={() => <NewPassword/>}/>\r\n                <Route path={PATH.TEST} render={() => <Test/>}/>\r\n                <Route render={() => <Error404/>}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport style from './CustomNavLink.module.css'\r\n\r\ntype CustomNavLinkPropsType = {\r\n    title: string,\r\n    to: string\r\n}\r\n\r\nconst CustomNavLink = (props: CustomNavLinkPropsType) => {\r\n    return (\r\n        <div className={style.navLink}>\r\n            <NavLink to={props.to}>{props.title}</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default CustomNavLink;","import React from 'react';\r\nimport style from './Header.module.css'\r\nimport {PATH} from '../routes/Routes';\r\nimport CustomNavLink from '../../../2-features/1-auth/2-signUp/sign-up-common/CustomNavLink/CustomNavLink';\r\nimport SuperButton from '../../../2-features/1-auth/2-signUp/sign-up-common/SuperButton/SuperButton';\r\nimport {useDispatch} from 'react-redux';\r\nimport {logoutSuccess} from '../../2-bll/authReducer';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nfunction Header() {\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logoutSuccess())\r\n    }\r\n\r\n    return (\r\n        <div className={style.header}>\r\n            <CustomNavLink title={'profile'} to={PATH.PROFILE}/>\r\n            <CustomNavLink title={'packs'} to={PATH.PACKS}/>\r\n            <CustomNavLink title={'sign-up'} to={PATH.SIGN_UP}/>\r\n            <CustomNavLink title={'login'} to={PATH.LOGIN}/>\r\n            {/*<CustomNavLink title={'new password'} to={PATH.NEW_PASSWORD}/>*/}\r\n            <CustomNavLink title={'reset password'} to={PATH.RESET_PASSWORD}/>\r\n            <CustomNavLink title={'test'} to={PATH.TEST}/>\r\n            <NavLink to={'/login'}><SuperButton color={\"blue\"} onClick={logoutHandler}>logout</SuperButton></NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Header from './header/Header';\r\nimport Routes from './routes/Routes';\r\nimport Login from '../../2-features/1-auth/1-login/Login';\r\nimport {AppRootStateType} from '../2-bll/store';\r\nimport {useSelector} from 'react-redux';\r\n\r\nfunction Main() {\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.auth.isAuth)\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                isAuth\r\n                    ?\r\n                    <div>\r\n                        <Header/>\r\n                        <Routes/>\r\n                    </div>\r\n                    : <Login />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","import React, {useEffect} from 'react';\r\nimport './App.module.css';\r\nimport { useDispatch} from 'react-redux';\r\nimport Main from './Main';\r\nimport {getMe} from '../2-bll/authReducer';\r\n\r\n// Initial commit\r\n\r\nconst App = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getMe())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Main />\r\n        </div>\r\n    )\r\n}\r\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState: any = {}\r\n\r\nexport const profileReducer = (state: any = initialState, action: any) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport {authReducer} from './authReducer';\r\nimport {profileReducer} from './profileReducer';\r\nimport {restoreReducer} from './restoreReducer';\r\nimport {signUpReducer} from \"./signUpReducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {packsReducer} from \"./packsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    profile: profileReducer,\r\n    restore: restoreReducer,\r\n    signUp: signUpReducer,\r\n    packs: packsReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n\r\n//@ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './1-main/1-ui/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport {store} from './1-main/2-bll/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <HashRouter>\r\n          <Provider store={store}>\r\n              <App/>\r\n          </Provider>\r\n      </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}